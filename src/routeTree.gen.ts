/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'
import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LocaleNotAdminRouteImport } from './routes/$locale/not-admin'
import { Route as LocaleLearnerRouteImport } from './routes/$locale/learner'
import { Route as LocaleIframeTestRouteImport } from './routes/$locale/iframe-test'
import { Route as LocaleAdminRouteImport } from './routes/$locale/admin'
import { Route as LocalePublicRouteImport } from './routes/$locale/_public'
import { Route as LocaleLearnerIndexRouteImport } from './routes/$locale/learner/index'
import { Route as LocaleAdminIndexRouteImport } from './routes/$locale/admin/index'
import { Route as LocalePublicIndexRouteImport } from './routes/$locale/_public/index'
import { Route as LocaleAuthVerifyEmailRouteImport } from './routes/$locale/auth/verify-email'
import { Route as LocaleAuthLoginRouteImport } from './routes/$locale/auth/login'
import { Route as LocaleAuthCreateOrganizationRouteImport } from './routes/$locale/auth/create-organization'
import { Route as LocaleAdminSettingsRouteImport } from './routes/$locale/admin/settings'
import { Route as LocaleAdminCertificateRouteImport } from './routes/$locale/admin/certificate'
import { Route as LocaleAdminApiKeysRouteImport } from './routes/$locale/admin/api-keys'
import { Route as LocaleAdminWebhooksIndexRouteImport } from './routes/$locale/admin/webhooks.index'
import { Route as LocaleAdminMembersIndexRouteImport } from './routes/$locale/admin/members.index'
import { Route as LocaleLearnerCollectionsCollectionIdRouteImport } from './routes/$locale/learner/collections.$collectionId'
import { Route as LocaleAdminWebhooksCreateRouteImport } from './routes/$locale/admin/webhooks.create'
import { Route as LocaleAdminWebhooksWebhookIdRouteImport } from './routes/$locale/admin/webhooks.$webhookId'
import { Route as LocaleAdminSuperUsersRouteImport } from './routes/$locale/admin/super.users'
import { Route as LocaleAdminMembersCreateRouteImport } from './routes/$locale/admin/members.create'
import { Route as LocaleAdminMembersIdRouteImport } from './routes/$locale/admin/members.$id'
import { Route as LocaleAdminCoursesCreateRouteImport } from './routes/$locale/admin/courses.create'
import { Route as LocaleAdminCollectionsCreateRouteImport } from './routes/$locale/admin/collections.create'
import { Route as LocalePublicCollectionsCollectionIdRouteImport } from './routes/$locale/_public/collections.$collectionId'
import { Route as LocaleLearnerCoursesCourseIdIndexRouteImport } from './routes/$locale/learner/courses.$courseId.index'
import { Route as LocaleAdminCoursesCourseIdIndexRouteImport } from './routes/$locale/admin/courses.$courseId.index'
import { Route as LocalePublicCoursesCourseIdIndexRouteImport } from './routes/$locale/_public/courses.$courseId.index'
import { Route as LocaleLearnerCoursesCourseIdPlayRouteImport } from './routes/$locale/learner/courses.$courseId.play'
import { Route as LocaleAdminCoursesCourseIdWebhooksRouteImport } from './routes/$locale/admin/courses.$courseId.webhooks'
import { Route as LocaleAdminCoursesCourseIdStatisticsRouteImport } from './routes/$locale/admin/courses.$courseId.statistics'
import { Route as LocaleAdminCoursesCourseIdSharingRouteImport } from './routes/$locale/admin/courses.$courseId.sharing'
import { Route as LocaleAdminCoursesCourseIdSettingsRouteImport } from './routes/$locale/admin/courses.$courseId.settings'
import { Route as LocaleAdminCoursesCourseIdModulesRouteImport } from './routes/$locale/admin/courses.$courseId.modules'
import { Route as LocaleAdminCoursesCourseIdLearnersRouteImport } from './routes/$locale/admin/courses.$courseId.learners'
import { Route as LocaleAdminCollectionsCollectionIdSettingsRouteImport } from './routes/$locale/admin/collections.$collectionId.settings'
import { Route as LocaleAdminCollectionsCollectionIdLearnersRouteImport } from './routes/$locale/admin/collections.$collectionId.learners'
import { Route as LocaleAdminCollectionsCollectionIdCoursesRouteImport } from './routes/$locale/admin/collections.$collectionId.courses'
import { Route as LocaleredirectsCoursesCourseIdJoinRouteImport } from './routes/$locale/(redirects)/courses.$courseId.join'
import { Route as LocaleredirectsCoursesCourseIdCertificateRouteImport } from './routes/$locale/(redirects)/courses.$courseId.certificate'
import { Route as LocaleredirectsPlayOrganizationIdCoursesCourseIdRouteImport } from './routes/$locale/(redirects)/play.$organizationId.courses.$courseId'
import { Route as LocaleredirectsPlayOrganizationIdCoursesCourseIdJoinRouteImport } from './routes/$locale/(redirects)/play.$organizationId.courses.$courseId.join'
import { Route as LocaleredirectsPlayOrganizationIdCoursesCourseIdCertificateRouteImport } from './routes/$locale/(redirects)/play.$organizationId.courses.$courseId.certificate'
import { ServerRoute as CdnSplatServerRouteImport } from './routes/cdn.$'
import { ServerRoute as ApiSplatServerRouteImport } from './routes/api.$'
import { ServerRoute as ApiRpcSplatServerRouteImport } from './routes/api.rpc.$'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api.auth.$'

const LocaleRouteImport = createFileRoute('/$locale')()
const rootServerRouteImport = createServerRootRoute()

const LocaleRoute = LocaleRouteImport.update({
  id: '/$locale',
  path: '/$locale',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleNotAdminRoute = LocaleNotAdminRouteImport.update({
  id: '/not-admin',
  path: '/not-admin',
  getParentRoute: () => LocaleRoute,
} as any)
const LocaleLearnerRoute = LocaleLearnerRouteImport.update({
  id: '/learner',
  path: '/learner',
  getParentRoute: () => LocaleRoute,
} as any)
const LocaleIframeTestRoute = LocaleIframeTestRouteImport.update({
  id: '/iframe-test',
  path: '/iframe-test',
  getParentRoute: () => LocaleRoute,
} as any)
const LocaleAdminRoute = LocaleAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => LocaleRoute,
} as any)
const LocalePublicRoute = LocalePublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => LocaleRoute,
} as any)
const LocaleLearnerIndexRoute = LocaleLearnerIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleLearnerRoute,
} as any)
const LocaleAdminIndexRoute = LocaleAdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocalePublicIndexRoute = LocalePublicIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocalePublicRoute,
} as any)
const LocaleAuthVerifyEmailRoute = LocaleAuthVerifyEmailRouteImport.update({
  id: '/auth/verify-email',
  path: '/auth/verify-email',
  getParentRoute: () => LocaleRoute,
} as any)
const LocaleAuthLoginRoute = LocaleAuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => LocaleRoute,
} as any)
const LocaleAuthCreateOrganizationRoute =
  LocaleAuthCreateOrganizationRouteImport.update({
    id: '/auth/create-organization',
    path: '/auth/create-organization',
    getParentRoute: () => LocaleRoute,
  } as any)
const LocaleAdminSettingsRoute = LocaleAdminSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleAdminCertificateRoute = LocaleAdminCertificateRouteImport.update({
  id: '/certificate',
  path: '/certificate',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleAdminApiKeysRoute = LocaleAdminApiKeysRouteImport.update({
  id: '/api-keys',
  path: '/api-keys',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleAdminWebhooksIndexRoute =
  LocaleAdminWebhooksIndexRouteImport.update({
    id: '/webhooks/',
    path: '/webhooks/',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminMembersIndexRoute = LocaleAdminMembersIndexRouteImport.update({
  id: '/members/',
  path: '/members/',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleLearnerCollectionsCollectionIdRoute =
  LocaleLearnerCollectionsCollectionIdRouteImport.update({
    id: '/collections/$collectionId',
    path: '/collections/$collectionId',
    getParentRoute: () => LocaleLearnerRoute,
  } as any)
const LocaleAdminWebhooksCreateRoute =
  LocaleAdminWebhooksCreateRouteImport.update({
    id: '/webhooks/create',
    path: '/webhooks/create',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminWebhooksWebhookIdRoute =
  LocaleAdminWebhooksWebhookIdRouteImport.update({
    id: '/webhooks/$webhookId',
    path: '/webhooks/$webhookId',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminSuperUsersRoute = LocaleAdminSuperUsersRouteImport.update({
  id: '/super/users',
  path: '/super/users',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleAdminMembersCreateRoute =
  LocaleAdminMembersCreateRouteImport.update({
    id: '/members/create',
    path: '/members/create',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminMembersIdRoute = LocaleAdminMembersIdRouteImport.update({
  id: '/members/$id',
  path: '/members/$id',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleAdminCoursesCreateRoute =
  LocaleAdminCoursesCreateRouteImport.update({
    id: '/courses/create',
    path: '/courses/create',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCollectionsCreateRoute =
  LocaleAdminCollectionsCreateRouteImport.update({
    id: '/collections/create',
    path: '/collections/create',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocalePublicCollectionsCollectionIdRoute =
  LocalePublicCollectionsCollectionIdRouteImport.update({
    id: '/collections/$collectionId',
    path: '/collections/$collectionId',
    getParentRoute: () => LocalePublicRoute,
  } as any)
const LocaleLearnerCoursesCourseIdIndexRoute =
  LocaleLearnerCoursesCourseIdIndexRouteImport.update({
    id: '/courses/$courseId/',
    path: '/courses/$courseId/',
    getParentRoute: () => LocaleLearnerRoute,
  } as any)
const LocaleAdminCoursesCourseIdIndexRoute =
  LocaleAdminCoursesCourseIdIndexRouteImport.update({
    id: '/courses/$courseId/',
    path: '/courses/$courseId/',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocalePublicCoursesCourseIdIndexRoute =
  LocalePublicCoursesCourseIdIndexRouteImport.update({
    id: '/courses/$courseId/',
    path: '/courses/$courseId/',
    getParentRoute: () => LocalePublicRoute,
  } as any)
const LocaleLearnerCoursesCourseIdPlayRoute =
  LocaleLearnerCoursesCourseIdPlayRouteImport.update({
    id: '/courses/$courseId/play',
    path: '/courses/$courseId/play',
    getParentRoute: () => LocaleLearnerRoute,
  } as any)
const LocaleAdminCoursesCourseIdWebhooksRoute =
  LocaleAdminCoursesCourseIdWebhooksRouteImport.update({
    id: '/courses/$courseId/webhooks',
    path: '/courses/$courseId/webhooks',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCoursesCourseIdStatisticsRoute =
  LocaleAdminCoursesCourseIdStatisticsRouteImport.update({
    id: '/courses/$courseId/statistics',
    path: '/courses/$courseId/statistics',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCoursesCourseIdSharingRoute =
  LocaleAdminCoursesCourseIdSharingRouteImport.update({
    id: '/courses/$courseId/sharing',
    path: '/courses/$courseId/sharing',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCoursesCourseIdSettingsRoute =
  LocaleAdminCoursesCourseIdSettingsRouteImport.update({
    id: '/courses/$courseId/settings',
    path: '/courses/$courseId/settings',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCoursesCourseIdModulesRoute =
  LocaleAdminCoursesCourseIdModulesRouteImport.update({
    id: '/courses/$courseId/modules',
    path: '/courses/$courseId/modules',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCoursesCourseIdLearnersRoute =
  LocaleAdminCoursesCourseIdLearnersRouteImport.update({
    id: '/courses/$courseId/learners',
    path: '/courses/$courseId/learners',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCollectionsCollectionIdSettingsRoute =
  LocaleAdminCollectionsCollectionIdSettingsRouteImport.update({
    id: '/collections/$collectionId/settings',
    path: '/collections/$collectionId/settings',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCollectionsCollectionIdLearnersRoute =
  LocaleAdminCollectionsCollectionIdLearnersRouteImport.update({
    id: '/collections/$collectionId/learners',
    path: '/collections/$collectionId/learners',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCollectionsCollectionIdCoursesRoute =
  LocaleAdminCollectionsCollectionIdCoursesRouteImport.update({
    id: '/collections/$collectionId/courses',
    path: '/collections/$collectionId/courses',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleredirectsCoursesCourseIdJoinRoute =
  LocaleredirectsCoursesCourseIdJoinRouteImport.update({
    id: '/(redirects)/courses/$courseId/join',
    path: '/courses/$courseId/join',
    getParentRoute: () => LocaleRoute,
  } as any)
const LocaleredirectsCoursesCourseIdCertificateRoute =
  LocaleredirectsCoursesCourseIdCertificateRouteImport.update({
    id: '/(redirects)/courses/$courseId/certificate',
    path: '/courses/$courseId/certificate',
    getParentRoute: () => LocaleRoute,
  } as any)
const LocaleredirectsPlayOrganizationIdCoursesCourseIdRoute =
  LocaleredirectsPlayOrganizationIdCoursesCourseIdRouteImport.update({
    id: '/(redirects)/play/$organizationId/courses/$courseId',
    path: '/play/$organizationId/courses/$courseId',
    getParentRoute: () => LocaleRoute,
  } as any)
const LocaleredirectsPlayOrganizationIdCoursesCourseIdJoinRoute =
  LocaleredirectsPlayOrganizationIdCoursesCourseIdJoinRouteImport.update({
    id: '/join',
    path: '/join',
    getParentRoute: () => LocaleredirectsPlayOrganizationIdCoursesCourseIdRoute,
  } as any)
const LocaleredirectsPlayOrganizationIdCoursesCourseIdCertificateRoute =
  LocaleredirectsPlayOrganizationIdCoursesCourseIdCertificateRouteImport.update(
    {
      id: '/certificate',
      path: '/certificate',
      getParentRoute: () =>
        LocaleredirectsPlayOrganizationIdCoursesCourseIdRoute,
    } as any,
  )
const CdnSplatServerRoute = CdnSplatServerRouteImport.update({
  id: '/cdn/$',
  path: '/cdn/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiSplatServerRoute = ApiSplatServerRouteImport.update({
  id: '/api/$',
  path: '/api/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiRpcSplatServerRoute = ApiRpcSplatServerRouteImport.update({
  id: '/api/rpc/$',
  path: '/api/rpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/$locale': typeof LocalePublicRouteWithChildren
  '/$locale/admin': typeof LocaleAdminRouteWithChildren
  '/$locale/iframe-test': typeof LocaleIframeTestRoute
  '/$locale/learner': typeof LocaleLearnerRouteWithChildren
  '/$locale/not-admin': typeof LocaleNotAdminRoute
  '/$locale/admin/api-keys': typeof LocaleAdminApiKeysRoute
  '/$locale/admin/certificate': typeof LocaleAdminCertificateRoute
  '/$locale/admin/settings': typeof LocaleAdminSettingsRoute
  '/$locale/auth/create-organization': typeof LocaleAuthCreateOrganizationRoute
  '/$locale/auth/login': typeof LocaleAuthLoginRoute
  '/$locale/auth/verify-email': typeof LocaleAuthVerifyEmailRoute
  '/$locale/': typeof LocalePublicIndexRoute
  '/$locale/admin/': typeof LocaleAdminIndexRoute
  '/$locale/learner/': typeof LocaleLearnerIndexRoute
  '/$locale/collections/$collectionId': typeof LocalePublicCollectionsCollectionIdRoute
  '/$locale/admin/collections/create': typeof LocaleAdminCollectionsCreateRoute
  '/$locale/admin/courses/create': typeof LocaleAdminCoursesCreateRoute
  '/$locale/admin/members/$id': typeof LocaleAdminMembersIdRoute
  '/$locale/admin/members/create': typeof LocaleAdminMembersCreateRoute
  '/$locale/admin/super/users': typeof LocaleAdminSuperUsersRoute
  '/$locale/admin/webhooks/$webhookId': typeof LocaleAdminWebhooksWebhookIdRoute
  '/$locale/admin/webhooks/create': typeof LocaleAdminWebhooksCreateRoute
  '/$locale/learner/collections/$collectionId': typeof LocaleLearnerCollectionsCollectionIdRoute
  '/$locale/admin/members': typeof LocaleAdminMembersIndexRoute
  '/$locale/admin/webhooks': typeof LocaleAdminWebhooksIndexRoute
  '/$locale/courses/$courseId/certificate': typeof LocaleredirectsCoursesCourseIdCertificateRoute
  '/$locale/courses/$courseId/join': typeof LocaleredirectsCoursesCourseIdJoinRoute
  '/$locale/admin/collections/$collectionId/courses': typeof LocaleAdminCollectionsCollectionIdCoursesRoute
  '/$locale/admin/collections/$collectionId/learners': typeof LocaleAdminCollectionsCollectionIdLearnersRoute
  '/$locale/admin/collections/$collectionId/settings': typeof LocaleAdminCollectionsCollectionIdSettingsRoute
  '/$locale/admin/courses/$courseId/learners': typeof LocaleAdminCoursesCourseIdLearnersRoute
  '/$locale/admin/courses/$courseId/modules': typeof LocaleAdminCoursesCourseIdModulesRoute
  '/$locale/admin/courses/$courseId/settings': typeof LocaleAdminCoursesCourseIdSettingsRoute
  '/$locale/admin/courses/$courseId/sharing': typeof LocaleAdminCoursesCourseIdSharingRoute
  '/$locale/admin/courses/$courseId/statistics': typeof LocaleAdminCoursesCourseIdStatisticsRoute
  '/$locale/admin/courses/$courseId/webhooks': typeof LocaleAdminCoursesCourseIdWebhooksRoute
  '/$locale/learner/courses/$courseId/play': typeof LocaleLearnerCoursesCourseIdPlayRoute
  '/$locale/courses/$courseId': typeof LocalePublicCoursesCourseIdIndexRoute
  '/$locale/admin/courses/$courseId': typeof LocaleAdminCoursesCourseIdIndexRoute
  '/$locale/learner/courses/$courseId': typeof LocaleLearnerCoursesCourseIdIndexRoute
  '/$locale/play/$organizationId/courses/$courseId': typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdRouteWithChildren
  '/$locale/play/$organizationId/courses/$courseId/certificate': typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdCertificateRoute
  '/$locale/play/$organizationId/courses/$courseId/join': typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdJoinRoute
}
export interface FileRoutesByTo {
  '/$locale': typeof LocalePublicIndexRoute
  '/$locale/iframe-test': typeof LocaleIframeTestRoute
  '/$locale/not-admin': typeof LocaleNotAdminRoute
  '/$locale/admin/api-keys': typeof LocaleAdminApiKeysRoute
  '/$locale/admin/certificate': typeof LocaleAdminCertificateRoute
  '/$locale/admin/settings': typeof LocaleAdminSettingsRoute
  '/$locale/auth/create-organization': typeof LocaleAuthCreateOrganizationRoute
  '/$locale/auth/login': typeof LocaleAuthLoginRoute
  '/$locale/auth/verify-email': typeof LocaleAuthVerifyEmailRoute
  '/$locale/admin': typeof LocaleAdminIndexRoute
  '/$locale/learner': typeof LocaleLearnerIndexRoute
  '/$locale/collections/$collectionId': typeof LocalePublicCollectionsCollectionIdRoute
  '/$locale/admin/collections/create': typeof LocaleAdminCollectionsCreateRoute
  '/$locale/admin/courses/create': typeof LocaleAdminCoursesCreateRoute
  '/$locale/admin/members/$id': typeof LocaleAdminMembersIdRoute
  '/$locale/admin/members/create': typeof LocaleAdminMembersCreateRoute
  '/$locale/admin/super/users': typeof LocaleAdminSuperUsersRoute
  '/$locale/admin/webhooks/$webhookId': typeof LocaleAdminWebhooksWebhookIdRoute
  '/$locale/admin/webhooks/create': typeof LocaleAdminWebhooksCreateRoute
  '/$locale/learner/collections/$collectionId': typeof LocaleLearnerCollectionsCollectionIdRoute
  '/$locale/admin/members': typeof LocaleAdminMembersIndexRoute
  '/$locale/admin/webhooks': typeof LocaleAdminWebhooksIndexRoute
  '/$locale/courses/$courseId/certificate': typeof LocaleredirectsCoursesCourseIdCertificateRoute
  '/$locale/courses/$courseId/join': typeof LocaleredirectsCoursesCourseIdJoinRoute
  '/$locale/admin/collections/$collectionId/courses': typeof LocaleAdminCollectionsCollectionIdCoursesRoute
  '/$locale/admin/collections/$collectionId/learners': typeof LocaleAdminCollectionsCollectionIdLearnersRoute
  '/$locale/admin/collections/$collectionId/settings': typeof LocaleAdminCollectionsCollectionIdSettingsRoute
  '/$locale/admin/courses/$courseId/learners': typeof LocaleAdminCoursesCourseIdLearnersRoute
  '/$locale/admin/courses/$courseId/modules': typeof LocaleAdminCoursesCourseIdModulesRoute
  '/$locale/admin/courses/$courseId/settings': typeof LocaleAdminCoursesCourseIdSettingsRoute
  '/$locale/admin/courses/$courseId/sharing': typeof LocaleAdminCoursesCourseIdSharingRoute
  '/$locale/admin/courses/$courseId/statistics': typeof LocaleAdminCoursesCourseIdStatisticsRoute
  '/$locale/admin/courses/$courseId/webhooks': typeof LocaleAdminCoursesCourseIdWebhooksRoute
  '/$locale/learner/courses/$courseId/play': typeof LocaleLearnerCoursesCourseIdPlayRoute
  '/$locale/courses/$courseId': typeof LocalePublicCoursesCourseIdIndexRoute
  '/$locale/admin/courses/$courseId': typeof LocaleAdminCoursesCourseIdIndexRoute
  '/$locale/learner/courses/$courseId': typeof LocaleLearnerCoursesCourseIdIndexRoute
  '/$locale/play/$organizationId/courses/$courseId': typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdRouteWithChildren
  '/$locale/play/$organizationId/courses/$courseId/certificate': typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdCertificateRoute
  '/$locale/play/$organizationId/courses/$courseId/join': typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdJoinRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/$locale': typeof LocaleRouteWithChildren
  '/$locale/_public': typeof LocalePublicRouteWithChildren
  '/$locale/admin': typeof LocaleAdminRouteWithChildren
  '/$locale/iframe-test': typeof LocaleIframeTestRoute
  '/$locale/learner': typeof LocaleLearnerRouteWithChildren
  '/$locale/not-admin': typeof LocaleNotAdminRoute
  '/$locale/admin/api-keys': typeof LocaleAdminApiKeysRoute
  '/$locale/admin/certificate': typeof LocaleAdminCertificateRoute
  '/$locale/admin/settings': typeof LocaleAdminSettingsRoute
  '/$locale/auth/create-organization': typeof LocaleAuthCreateOrganizationRoute
  '/$locale/auth/login': typeof LocaleAuthLoginRoute
  '/$locale/auth/verify-email': typeof LocaleAuthVerifyEmailRoute
  '/$locale/_public/': typeof LocalePublicIndexRoute
  '/$locale/admin/': typeof LocaleAdminIndexRoute
  '/$locale/learner/': typeof LocaleLearnerIndexRoute
  '/$locale/_public/collections/$collectionId': typeof LocalePublicCollectionsCollectionIdRoute
  '/$locale/admin/collections/create': typeof LocaleAdminCollectionsCreateRoute
  '/$locale/admin/courses/create': typeof LocaleAdminCoursesCreateRoute
  '/$locale/admin/members/$id': typeof LocaleAdminMembersIdRoute
  '/$locale/admin/members/create': typeof LocaleAdminMembersCreateRoute
  '/$locale/admin/super/users': typeof LocaleAdminSuperUsersRoute
  '/$locale/admin/webhooks/$webhookId': typeof LocaleAdminWebhooksWebhookIdRoute
  '/$locale/admin/webhooks/create': typeof LocaleAdminWebhooksCreateRoute
  '/$locale/learner/collections/$collectionId': typeof LocaleLearnerCollectionsCollectionIdRoute
  '/$locale/admin/members/': typeof LocaleAdminMembersIndexRoute
  '/$locale/admin/webhooks/': typeof LocaleAdminWebhooksIndexRoute
  '/$locale/(redirects)/courses/$courseId/certificate': typeof LocaleredirectsCoursesCourseIdCertificateRoute
  '/$locale/(redirects)/courses/$courseId/join': typeof LocaleredirectsCoursesCourseIdJoinRoute
  '/$locale/admin/collections/$collectionId/courses': typeof LocaleAdminCollectionsCollectionIdCoursesRoute
  '/$locale/admin/collections/$collectionId/learners': typeof LocaleAdminCollectionsCollectionIdLearnersRoute
  '/$locale/admin/collections/$collectionId/settings': typeof LocaleAdminCollectionsCollectionIdSettingsRoute
  '/$locale/admin/courses/$courseId/learners': typeof LocaleAdminCoursesCourseIdLearnersRoute
  '/$locale/admin/courses/$courseId/modules': typeof LocaleAdminCoursesCourseIdModulesRoute
  '/$locale/admin/courses/$courseId/settings': typeof LocaleAdminCoursesCourseIdSettingsRoute
  '/$locale/admin/courses/$courseId/sharing': typeof LocaleAdminCoursesCourseIdSharingRoute
  '/$locale/admin/courses/$courseId/statistics': typeof LocaleAdminCoursesCourseIdStatisticsRoute
  '/$locale/admin/courses/$courseId/webhooks': typeof LocaleAdminCoursesCourseIdWebhooksRoute
  '/$locale/learner/courses/$courseId/play': typeof LocaleLearnerCoursesCourseIdPlayRoute
  '/$locale/_public/courses/$courseId/': typeof LocalePublicCoursesCourseIdIndexRoute
  '/$locale/admin/courses/$courseId/': typeof LocaleAdminCoursesCourseIdIndexRoute
  '/$locale/learner/courses/$courseId/': typeof LocaleLearnerCoursesCourseIdIndexRoute
  '/$locale/(redirects)/play/$organizationId/courses/$courseId': typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdRouteWithChildren
  '/$locale/(redirects)/play/$organizationId/courses/$courseId/certificate': typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdCertificateRoute
  '/$locale/(redirects)/play/$organizationId/courses/$courseId/join': typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdJoinRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$locale'
    | '/$locale/admin'
    | '/$locale/iframe-test'
    | '/$locale/learner'
    | '/$locale/not-admin'
    | '/$locale/admin/api-keys'
    | '/$locale/admin/certificate'
    | '/$locale/admin/settings'
    | '/$locale/auth/create-organization'
    | '/$locale/auth/login'
    | '/$locale/auth/verify-email'
    | '/$locale/'
    | '/$locale/admin/'
    | '/$locale/learner/'
    | '/$locale/collections/$collectionId'
    | '/$locale/admin/collections/create'
    | '/$locale/admin/courses/create'
    | '/$locale/admin/members/$id'
    | '/$locale/admin/members/create'
    | '/$locale/admin/super/users'
    | '/$locale/admin/webhooks/$webhookId'
    | '/$locale/admin/webhooks/create'
    | '/$locale/learner/collections/$collectionId'
    | '/$locale/admin/members'
    | '/$locale/admin/webhooks'
    | '/$locale/courses/$courseId/certificate'
    | '/$locale/courses/$courseId/join'
    | '/$locale/admin/collections/$collectionId/courses'
    | '/$locale/admin/collections/$collectionId/learners'
    | '/$locale/admin/collections/$collectionId/settings'
    | '/$locale/admin/courses/$courseId/learners'
    | '/$locale/admin/courses/$courseId/modules'
    | '/$locale/admin/courses/$courseId/settings'
    | '/$locale/admin/courses/$courseId/sharing'
    | '/$locale/admin/courses/$courseId/statistics'
    | '/$locale/admin/courses/$courseId/webhooks'
    | '/$locale/learner/courses/$courseId/play'
    | '/$locale/courses/$courseId'
    | '/$locale/admin/courses/$courseId'
    | '/$locale/learner/courses/$courseId'
    | '/$locale/play/$organizationId/courses/$courseId'
    | '/$locale/play/$organizationId/courses/$courseId/certificate'
    | '/$locale/play/$organizationId/courses/$courseId/join'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$locale'
    | '/$locale/iframe-test'
    | '/$locale/not-admin'
    | '/$locale/admin/api-keys'
    | '/$locale/admin/certificate'
    | '/$locale/admin/settings'
    | '/$locale/auth/create-organization'
    | '/$locale/auth/login'
    | '/$locale/auth/verify-email'
    | '/$locale/admin'
    | '/$locale/learner'
    | '/$locale/collections/$collectionId'
    | '/$locale/admin/collections/create'
    | '/$locale/admin/courses/create'
    | '/$locale/admin/members/$id'
    | '/$locale/admin/members/create'
    | '/$locale/admin/super/users'
    | '/$locale/admin/webhooks/$webhookId'
    | '/$locale/admin/webhooks/create'
    | '/$locale/learner/collections/$collectionId'
    | '/$locale/admin/members'
    | '/$locale/admin/webhooks'
    | '/$locale/courses/$courseId/certificate'
    | '/$locale/courses/$courseId/join'
    | '/$locale/admin/collections/$collectionId/courses'
    | '/$locale/admin/collections/$collectionId/learners'
    | '/$locale/admin/collections/$collectionId/settings'
    | '/$locale/admin/courses/$courseId/learners'
    | '/$locale/admin/courses/$courseId/modules'
    | '/$locale/admin/courses/$courseId/settings'
    | '/$locale/admin/courses/$courseId/sharing'
    | '/$locale/admin/courses/$courseId/statistics'
    | '/$locale/admin/courses/$courseId/webhooks'
    | '/$locale/learner/courses/$courseId/play'
    | '/$locale/courses/$courseId'
    | '/$locale/admin/courses/$courseId'
    | '/$locale/learner/courses/$courseId'
    | '/$locale/play/$organizationId/courses/$courseId'
    | '/$locale/play/$organizationId/courses/$courseId/certificate'
    | '/$locale/play/$organizationId/courses/$courseId/join'
  id:
    | '__root__'
    | '/$locale'
    | '/$locale/_public'
    | '/$locale/admin'
    | '/$locale/iframe-test'
    | '/$locale/learner'
    | '/$locale/not-admin'
    | '/$locale/admin/api-keys'
    | '/$locale/admin/certificate'
    | '/$locale/admin/settings'
    | '/$locale/auth/create-organization'
    | '/$locale/auth/login'
    | '/$locale/auth/verify-email'
    | '/$locale/_public/'
    | '/$locale/admin/'
    | '/$locale/learner/'
    | '/$locale/_public/collections/$collectionId'
    | '/$locale/admin/collections/create'
    | '/$locale/admin/courses/create'
    | '/$locale/admin/members/$id'
    | '/$locale/admin/members/create'
    | '/$locale/admin/super/users'
    | '/$locale/admin/webhooks/$webhookId'
    | '/$locale/admin/webhooks/create'
    | '/$locale/learner/collections/$collectionId'
    | '/$locale/admin/members/'
    | '/$locale/admin/webhooks/'
    | '/$locale/(redirects)/courses/$courseId/certificate'
    | '/$locale/(redirects)/courses/$courseId/join'
    | '/$locale/admin/collections/$collectionId/courses'
    | '/$locale/admin/collections/$collectionId/learners'
    | '/$locale/admin/collections/$collectionId/settings'
    | '/$locale/admin/courses/$courseId/learners'
    | '/$locale/admin/courses/$courseId/modules'
    | '/$locale/admin/courses/$courseId/settings'
    | '/$locale/admin/courses/$courseId/sharing'
    | '/$locale/admin/courses/$courseId/statistics'
    | '/$locale/admin/courses/$courseId/webhooks'
    | '/$locale/learner/courses/$courseId/play'
    | '/$locale/_public/courses/$courseId/'
    | '/$locale/admin/courses/$courseId/'
    | '/$locale/learner/courses/$courseId/'
    | '/$locale/(redirects)/play/$organizationId/courses/$courseId'
    | '/$locale/(redirects)/play/$organizationId/courses/$courseId/certificate'
    | '/$locale/(redirects)/play/$organizationId/courses/$courseId/join'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LocaleRoute: typeof LocaleRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/$': typeof ApiSplatServerRoute
  '/cdn/$': typeof CdnSplatServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/rpc/$': typeof ApiRpcSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/$': typeof ApiSplatServerRoute
  '/cdn/$': typeof CdnSplatServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/rpc/$': typeof ApiRpcSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/$': typeof ApiSplatServerRoute
  '/cdn/$': typeof CdnSplatServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/rpc/$': typeof ApiRpcSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/$' | '/cdn/$' | '/api/auth/$' | '/api/rpc/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/$' | '/cdn/$' | '/api/auth/$' | '/api/rpc/$'
  id: '__root__' | '/api/$' | '/cdn/$' | '/api/auth/$' | '/api/rpc/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiSplatServerRoute: typeof ApiSplatServerRoute
  CdnSplatServerRoute: typeof CdnSplatServerRoute
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
  ApiRpcSplatServerRoute: typeof ApiRpcSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$locale': {
      id: '/$locale'
      path: '/$locale'
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/not-admin': {
      id: '/$locale/not-admin'
      path: '/not-admin'
      fullPath: '/$locale/not-admin'
      preLoaderRoute: typeof LocaleNotAdminRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/learner': {
      id: '/$locale/learner'
      path: '/learner'
      fullPath: '/$locale/learner'
      preLoaderRoute: typeof LocaleLearnerRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/iframe-test': {
      id: '/$locale/iframe-test'
      path: '/iframe-test'
      fullPath: '/$locale/iframe-test'
      preLoaderRoute: typeof LocaleIframeTestRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/admin': {
      id: '/$locale/admin'
      path: '/admin'
      fullPath: '/$locale/admin'
      preLoaderRoute: typeof LocaleAdminRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/_public': {
      id: '/$locale/_public'
      path: '/$locale'
      fullPath: '/$locale'
      preLoaderRoute: typeof LocalePublicRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/learner/': {
      id: '/$locale/learner/'
      path: '/'
      fullPath: '/$locale/learner/'
      preLoaderRoute: typeof LocaleLearnerIndexRouteImport
      parentRoute: typeof LocaleLearnerRoute
    }
    '/$locale/admin/': {
      id: '/$locale/admin/'
      path: '/'
      fullPath: '/$locale/admin/'
      preLoaderRoute: typeof LocaleAdminIndexRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/_public/': {
      id: '/$locale/_public/'
      path: '/'
      fullPath: '/$locale/'
      preLoaderRoute: typeof LocalePublicIndexRouteImport
      parentRoute: typeof LocalePublicRoute
    }
    '/$locale/auth/verify-email': {
      id: '/$locale/auth/verify-email'
      path: '/auth/verify-email'
      fullPath: '/$locale/auth/verify-email'
      preLoaderRoute: typeof LocaleAuthVerifyEmailRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/auth/login': {
      id: '/$locale/auth/login'
      path: '/auth/login'
      fullPath: '/$locale/auth/login'
      preLoaderRoute: typeof LocaleAuthLoginRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/auth/create-organization': {
      id: '/$locale/auth/create-organization'
      path: '/auth/create-organization'
      fullPath: '/$locale/auth/create-organization'
      preLoaderRoute: typeof LocaleAuthCreateOrganizationRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/admin/settings': {
      id: '/$locale/admin/settings'
      path: '/settings'
      fullPath: '/$locale/admin/settings'
      preLoaderRoute: typeof LocaleAdminSettingsRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/certificate': {
      id: '/$locale/admin/certificate'
      path: '/certificate'
      fullPath: '/$locale/admin/certificate'
      preLoaderRoute: typeof LocaleAdminCertificateRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/api-keys': {
      id: '/$locale/admin/api-keys'
      path: '/api-keys'
      fullPath: '/$locale/admin/api-keys'
      preLoaderRoute: typeof LocaleAdminApiKeysRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/webhooks/': {
      id: '/$locale/admin/webhooks/'
      path: '/webhooks'
      fullPath: '/$locale/admin/webhooks'
      preLoaderRoute: typeof LocaleAdminWebhooksIndexRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/members/': {
      id: '/$locale/admin/members/'
      path: '/members'
      fullPath: '/$locale/admin/members'
      preLoaderRoute: typeof LocaleAdminMembersIndexRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/learner/collections/$collectionId': {
      id: '/$locale/learner/collections/$collectionId'
      path: '/collections/$collectionId'
      fullPath: '/$locale/learner/collections/$collectionId'
      preLoaderRoute: typeof LocaleLearnerCollectionsCollectionIdRouteImport
      parentRoute: typeof LocaleLearnerRoute
    }
    '/$locale/admin/webhooks/create': {
      id: '/$locale/admin/webhooks/create'
      path: '/webhooks/create'
      fullPath: '/$locale/admin/webhooks/create'
      preLoaderRoute: typeof LocaleAdminWebhooksCreateRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/webhooks/$webhookId': {
      id: '/$locale/admin/webhooks/$webhookId'
      path: '/webhooks/$webhookId'
      fullPath: '/$locale/admin/webhooks/$webhookId'
      preLoaderRoute: typeof LocaleAdminWebhooksWebhookIdRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/super/users': {
      id: '/$locale/admin/super/users'
      path: '/super/users'
      fullPath: '/$locale/admin/super/users'
      preLoaderRoute: typeof LocaleAdminSuperUsersRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/members/create': {
      id: '/$locale/admin/members/create'
      path: '/members/create'
      fullPath: '/$locale/admin/members/create'
      preLoaderRoute: typeof LocaleAdminMembersCreateRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/members/$id': {
      id: '/$locale/admin/members/$id'
      path: '/members/$id'
      fullPath: '/$locale/admin/members/$id'
      preLoaderRoute: typeof LocaleAdminMembersIdRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/courses/create': {
      id: '/$locale/admin/courses/create'
      path: '/courses/create'
      fullPath: '/$locale/admin/courses/create'
      preLoaderRoute: typeof LocaleAdminCoursesCreateRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/collections/create': {
      id: '/$locale/admin/collections/create'
      path: '/collections/create'
      fullPath: '/$locale/admin/collections/create'
      preLoaderRoute: typeof LocaleAdminCollectionsCreateRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/_public/collections/$collectionId': {
      id: '/$locale/_public/collections/$collectionId'
      path: '/collections/$collectionId'
      fullPath: '/$locale/collections/$collectionId'
      preLoaderRoute: typeof LocalePublicCollectionsCollectionIdRouteImport
      parentRoute: typeof LocalePublicRoute
    }
    '/$locale/learner/courses/$courseId/': {
      id: '/$locale/learner/courses/$courseId/'
      path: '/courses/$courseId'
      fullPath: '/$locale/learner/courses/$courseId'
      preLoaderRoute: typeof LocaleLearnerCoursesCourseIdIndexRouteImport
      parentRoute: typeof LocaleLearnerRoute
    }
    '/$locale/admin/courses/$courseId/': {
      id: '/$locale/admin/courses/$courseId/'
      path: '/courses/$courseId'
      fullPath: '/$locale/admin/courses/$courseId'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdIndexRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/_public/courses/$courseId/': {
      id: '/$locale/_public/courses/$courseId/'
      path: '/courses/$courseId'
      fullPath: '/$locale/courses/$courseId'
      preLoaderRoute: typeof LocalePublicCoursesCourseIdIndexRouteImport
      parentRoute: typeof LocalePublicRoute
    }
    '/$locale/learner/courses/$courseId/play': {
      id: '/$locale/learner/courses/$courseId/play'
      path: '/courses/$courseId/play'
      fullPath: '/$locale/learner/courses/$courseId/play'
      preLoaderRoute: typeof LocaleLearnerCoursesCourseIdPlayRouteImport
      parentRoute: typeof LocaleLearnerRoute
    }
    '/$locale/admin/courses/$courseId/webhooks': {
      id: '/$locale/admin/courses/$courseId/webhooks'
      path: '/courses/$courseId/webhooks'
      fullPath: '/$locale/admin/courses/$courseId/webhooks'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdWebhooksRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/courses/$courseId/statistics': {
      id: '/$locale/admin/courses/$courseId/statistics'
      path: '/courses/$courseId/statistics'
      fullPath: '/$locale/admin/courses/$courseId/statistics'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdStatisticsRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/courses/$courseId/sharing': {
      id: '/$locale/admin/courses/$courseId/sharing'
      path: '/courses/$courseId/sharing'
      fullPath: '/$locale/admin/courses/$courseId/sharing'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdSharingRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/courses/$courseId/settings': {
      id: '/$locale/admin/courses/$courseId/settings'
      path: '/courses/$courseId/settings'
      fullPath: '/$locale/admin/courses/$courseId/settings'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdSettingsRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/courses/$courseId/modules': {
      id: '/$locale/admin/courses/$courseId/modules'
      path: '/courses/$courseId/modules'
      fullPath: '/$locale/admin/courses/$courseId/modules'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdModulesRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/courses/$courseId/learners': {
      id: '/$locale/admin/courses/$courseId/learners'
      path: '/courses/$courseId/learners'
      fullPath: '/$locale/admin/courses/$courseId/learners'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdLearnersRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/collections/$collectionId/settings': {
      id: '/$locale/admin/collections/$collectionId/settings'
      path: '/collections/$collectionId/settings'
      fullPath: '/$locale/admin/collections/$collectionId/settings'
      preLoaderRoute: typeof LocaleAdminCollectionsCollectionIdSettingsRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/collections/$collectionId/learners': {
      id: '/$locale/admin/collections/$collectionId/learners'
      path: '/collections/$collectionId/learners'
      fullPath: '/$locale/admin/collections/$collectionId/learners'
      preLoaderRoute: typeof LocaleAdminCollectionsCollectionIdLearnersRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/collections/$collectionId/courses': {
      id: '/$locale/admin/collections/$collectionId/courses'
      path: '/collections/$collectionId/courses'
      fullPath: '/$locale/admin/collections/$collectionId/courses'
      preLoaderRoute: typeof LocaleAdminCollectionsCollectionIdCoursesRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/(redirects)/courses/$courseId/join': {
      id: '/$locale/(redirects)/courses/$courseId/join'
      path: '/courses/$courseId/join'
      fullPath: '/$locale/courses/$courseId/join'
      preLoaderRoute: typeof LocaleredirectsCoursesCourseIdJoinRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/(redirects)/courses/$courseId/certificate': {
      id: '/$locale/(redirects)/courses/$courseId/certificate'
      path: '/courses/$courseId/certificate'
      fullPath: '/$locale/courses/$courseId/certificate'
      preLoaderRoute: typeof LocaleredirectsCoursesCourseIdCertificateRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/(redirects)/play/$organizationId/courses/$courseId': {
      id: '/$locale/(redirects)/play/$organizationId/courses/$courseId'
      path: '/play/$organizationId/courses/$courseId'
      fullPath: '/$locale/play/$organizationId/courses/$courseId'
      preLoaderRoute: typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/(redirects)/play/$organizationId/courses/$courseId/join': {
      id: '/$locale/(redirects)/play/$organizationId/courses/$courseId/join'
      path: '/join'
      fullPath: '/$locale/play/$organizationId/courses/$courseId/join'
      preLoaderRoute: typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdJoinRouteImport
      parentRoute: typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdRoute
    }
    '/$locale/(redirects)/play/$organizationId/courses/$courseId/certificate': {
      id: '/$locale/(redirects)/play/$organizationId/courses/$courseId/certificate'
      path: '/certificate'
      fullPath: '/$locale/play/$organizationId/courses/$courseId/certificate'
      preLoaderRoute: typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdCertificateRouteImport
      parentRoute: typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/cdn/$': {
      id: '/cdn/$'
      path: '/cdn/$'
      fullPath: '/cdn/$'
      preLoaderRoute: typeof CdnSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/$': {
      id: '/api/$'
      path: '/api/$'
      fullPath: '/api/$'
      preLoaderRoute: typeof ApiSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/rpc/$': {
      id: '/api/rpc/$'
      path: '/api/rpc/$'
      fullPath: '/api/rpc/$'
      preLoaderRoute: typeof ApiRpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface LocalePublicRouteChildren {
  LocalePublicIndexRoute: typeof LocalePublicIndexRoute
  LocalePublicCollectionsCollectionIdRoute: typeof LocalePublicCollectionsCollectionIdRoute
  LocalePublicCoursesCourseIdIndexRoute: typeof LocalePublicCoursesCourseIdIndexRoute
}

const LocalePublicRouteChildren: LocalePublicRouteChildren = {
  LocalePublicIndexRoute: LocalePublicIndexRoute,
  LocalePublicCollectionsCollectionIdRoute:
    LocalePublicCollectionsCollectionIdRoute,
  LocalePublicCoursesCourseIdIndexRoute: LocalePublicCoursesCourseIdIndexRoute,
}

const LocalePublicRouteWithChildren = LocalePublicRoute._addFileChildren(
  LocalePublicRouteChildren,
)

interface LocaleAdminRouteChildren {
  LocaleAdminApiKeysRoute: typeof LocaleAdminApiKeysRoute
  LocaleAdminCertificateRoute: typeof LocaleAdminCertificateRoute
  LocaleAdminSettingsRoute: typeof LocaleAdminSettingsRoute
  LocaleAdminIndexRoute: typeof LocaleAdminIndexRoute
  LocaleAdminCollectionsCreateRoute: typeof LocaleAdminCollectionsCreateRoute
  LocaleAdminCoursesCreateRoute: typeof LocaleAdminCoursesCreateRoute
  LocaleAdminMembersIdRoute: typeof LocaleAdminMembersIdRoute
  LocaleAdminMembersCreateRoute: typeof LocaleAdminMembersCreateRoute
  LocaleAdminSuperUsersRoute: typeof LocaleAdminSuperUsersRoute
  LocaleAdminWebhooksWebhookIdRoute: typeof LocaleAdminWebhooksWebhookIdRoute
  LocaleAdminWebhooksCreateRoute: typeof LocaleAdminWebhooksCreateRoute
  LocaleAdminMembersIndexRoute: typeof LocaleAdminMembersIndexRoute
  LocaleAdminWebhooksIndexRoute: typeof LocaleAdminWebhooksIndexRoute
  LocaleAdminCollectionsCollectionIdCoursesRoute: typeof LocaleAdminCollectionsCollectionIdCoursesRoute
  LocaleAdminCollectionsCollectionIdLearnersRoute: typeof LocaleAdminCollectionsCollectionIdLearnersRoute
  LocaleAdminCollectionsCollectionIdSettingsRoute: typeof LocaleAdminCollectionsCollectionIdSettingsRoute
  LocaleAdminCoursesCourseIdLearnersRoute: typeof LocaleAdminCoursesCourseIdLearnersRoute
  LocaleAdminCoursesCourseIdModulesRoute: typeof LocaleAdminCoursesCourseIdModulesRoute
  LocaleAdminCoursesCourseIdSettingsRoute: typeof LocaleAdminCoursesCourseIdSettingsRoute
  LocaleAdminCoursesCourseIdSharingRoute: typeof LocaleAdminCoursesCourseIdSharingRoute
  LocaleAdminCoursesCourseIdStatisticsRoute: typeof LocaleAdminCoursesCourseIdStatisticsRoute
  LocaleAdminCoursesCourseIdWebhooksRoute: typeof LocaleAdminCoursesCourseIdWebhooksRoute
  LocaleAdminCoursesCourseIdIndexRoute: typeof LocaleAdminCoursesCourseIdIndexRoute
}

const LocaleAdminRouteChildren: LocaleAdminRouteChildren = {
  LocaleAdminApiKeysRoute: LocaleAdminApiKeysRoute,
  LocaleAdminCertificateRoute: LocaleAdminCertificateRoute,
  LocaleAdminSettingsRoute: LocaleAdminSettingsRoute,
  LocaleAdminIndexRoute: LocaleAdminIndexRoute,
  LocaleAdminCollectionsCreateRoute: LocaleAdminCollectionsCreateRoute,
  LocaleAdminCoursesCreateRoute: LocaleAdminCoursesCreateRoute,
  LocaleAdminMembersIdRoute: LocaleAdminMembersIdRoute,
  LocaleAdminMembersCreateRoute: LocaleAdminMembersCreateRoute,
  LocaleAdminSuperUsersRoute: LocaleAdminSuperUsersRoute,
  LocaleAdminWebhooksWebhookIdRoute: LocaleAdminWebhooksWebhookIdRoute,
  LocaleAdminWebhooksCreateRoute: LocaleAdminWebhooksCreateRoute,
  LocaleAdminMembersIndexRoute: LocaleAdminMembersIndexRoute,
  LocaleAdminWebhooksIndexRoute: LocaleAdminWebhooksIndexRoute,
  LocaleAdminCollectionsCollectionIdCoursesRoute:
    LocaleAdminCollectionsCollectionIdCoursesRoute,
  LocaleAdminCollectionsCollectionIdLearnersRoute:
    LocaleAdminCollectionsCollectionIdLearnersRoute,
  LocaleAdminCollectionsCollectionIdSettingsRoute:
    LocaleAdminCollectionsCollectionIdSettingsRoute,
  LocaleAdminCoursesCourseIdLearnersRoute:
    LocaleAdminCoursesCourseIdLearnersRoute,
  LocaleAdminCoursesCourseIdModulesRoute:
    LocaleAdminCoursesCourseIdModulesRoute,
  LocaleAdminCoursesCourseIdSettingsRoute:
    LocaleAdminCoursesCourseIdSettingsRoute,
  LocaleAdminCoursesCourseIdSharingRoute:
    LocaleAdminCoursesCourseIdSharingRoute,
  LocaleAdminCoursesCourseIdStatisticsRoute:
    LocaleAdminCoursesCourseIdStatisticsRoute,
  LocaleAdminCoursesCourseIdWebhooksRoute:
    LocaleAdminCoursesCourseIdWebhooksRoute,
  LocaleAdminCoursesCourseIdIndexRoute: LocaleAdminCoursesCourseIdIndexRoute,
}

const LocaleAdminRouteWithChildren = LocaleAdminRoute._addFileChildren(
  LocaleAdminRouteChildren,
)

interface LocaleLearnerRouteChildren {
  LocaleLearnerIndexRoute: typeof LocaleLearnerIndexRoute
  LocaleLearnerCollectionsCollectionIdRoute: typeof LocaleLearnerCollectionsCollectionIdRoute
  LocaleLearnerCoursesCourseIdPlayRoute: typeof LocaleLearnerCoursesCourseIdPlayRoute
  LocaleLearnerCoursesCourseIdIndexRoute: typeof LocaleLearnerCoursesCourseIdIndexRoute
}

const LocaleLearnerRouteChildren: LocaleLearnerRouteChildren = {
  LocaleLearnerIndexRoute: LocaleLearnerIndexRoute,
  LocaleLearnerCollectionsCollectionIdRoute:
    LocaleLearnerCollectionsCollectionIdRoute,
  LocaleLearnerCoursesCourseIdPlayRoute: LocaleLearnerCoursesCourseIdPlayRoute,
  LocaleLearnerCoursesCourseIdIndexRoute:
    LocaleLearnerCoursesCourseIdIndexRoute,
}

const LocaleLearnerRouteWithChildren = LocaleLearnerRoute._addFileChildren(
  LocaleLearnerRouteChildren,
)

interface LocaleredirectsPlayOrganizationIdCoursesCourseIdRouteChildren {
  LocaleredirectsPlayOrganizationIdCoursesCourseIdCertificateRoute: typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdCertificateRoute
  LocaleredirectsPlayOrganizationIdCoursesCourseIdJoinRoute: typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdJoinRoute
}

const LocaleredirectsPlayOrganizationIdCoursesCourseIdRouteChildren: LocaleredirectsPlayOrganizationIdCoursesCourseIdRouteChildren =
  {
    LocaleredirectsPlayOrganizationIdCoursesCourseIdCertificateRoute:
      LocaleredirectsPlayOrganizationIdCoursesCourseIdCertificateRoute,
    LocaleredirectsPlayOrganizationIdCoursesCourseIdJoinRoute:
      LocaleredirectsPlayOrganizationIdCoursesCourseIdJoinRoute,
  }

const LocaleredirectsPlayOrganizationIdCoursesCourseIdRouteWithChildren =
  LocaleredirectsPlayOrganizationIdCoursesCourseIdRoute._addFileChildren(
    LocaleredirectsPlayOrganizationIdCoursesCourseIdRouteChildren,
  )

interface LocaleRouteChildren {
  LocalePublicRoute: typeof LocalePublicRouteWithChildren
  LocaleAdminRoute: typeof LocaleAdminRouteWithChildren
  LocaleIframeTestRoute: typeof LocaleIframeTestRoute
  LocaleLearnerRoute: typeof LocaleLearnerRouteWithChildren
  LocaleNotAdminRoute: typeof LocaleNotAdminRoute
  LocaleAuthCreateOrganizationRoute: typeof LocaleAuthCreateOrganizationRoute
  LocaleAuthLoginRoute: typeof LocaleAuthLoginRoute
  LocaleAuthVerifyEmailRoute: typeof LocaleAuthVerifyEmailRoute
  LocaleredirectsCoursesCourseIdCertificateRoute: typeof LocaleredirectsCoursesCourseIdCertificateRoute
  LocaleredirectsCoursesCourseIdJoinRoute: typeof LocaleredirectsCoursesCourseIdJoinRoute
  LocaleredirectsPlayOrganizationIdCoursesCourseIdRoute: typeof LocaleredirectsPlayOrganizationIdCoursesCourseIdRouteWithChildren
}

const LocaleRouteChildren: LocaleRouteChildren = {
  LocalePublicRoute: LocalePublicRouteWithChildren,
  LocaleAdminRoute: LocaleAdminRouteWithChildren,
  LocaleIframeTestRoute: LocaleIframeTestRoute,
  LocaleLearnerRoute: LocaleLearnerRouteWithChildren,
  LocaleNotAdminRoute: LocaleNotAdminRoute,
  LocaleAuthCreateOrganizationRoute: LocaleAuthCreateOrganizationRoute,
  LocaleAuthLoginRoute: LocaleAuthLoginRoute,
  LocaleAuthVerifyEmailRoute: LocaleAuthVerifyEmailRoute,
  LocaleredirectsCoursesCourseIdCertificateRoute:
    LocaleredirectsCoursesCourseIdCertificateRoute,
  LocaleredirectsCoursesCourseIdJoinRoute:
    LocaleredirectsCoursesCourseIdJoinRoute,
  LocaleredirectsPlayOrganizationIdCoursesCourseIdRoute:
    LocaleredirectsPlayOrganizationIdCoursesCourseIdRouteWithChildren,
}

const LocaleRouteWithChildren =
  LocaleRoute._addFileChildren(LocaleRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LocaleRoute: LocaleRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiSplatServerRoute: ApiSplatServerRoute,
  CdnSplatServerRoute: CdnSplatServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiRpcSplatServerRoute: ApiRpcSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
