/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LocaleIndexRouteImport } from './routes/$locale/index'
import { Route as LocaleNotAdminRouteImport } from './routes/$locale/not-admin'
import { Route as LocaleLearnerRouteImport } from './routes/$locale/learner'
import { Route as LocaleIframeTestRouteImport } from './routes/$locale/iframe-test'
import { Route as LocaleCreateTeamRouteImport } from './routes/$locale/create-team'
import { Route as LocaleAiRouteImport } from './routes/$locale/ai'
import { Route as LocaleAdminRouteImport } from './routes/$locale/admin'
import { Route as LocaleLearnerIndexRouteImport } from './routes/$locale/learner/index'
import { Route as LocaleAdminIndexRouteImport } from './routes/$locale/admin/index'
import { Route as LocaleAuthVerifyEmailRouteImport } from './routes/$locale/auth/verify-email'
import { Route as LocaleAuthLoginRouteImport } from './routes/$locale/auth/login'
import { Route as LocaleAdminSettingsRouteImport } from './routes/$locale/admin/settings'
import { Route as LocaleAdminMembersRouteImport } from './routes/$locale/admin/members'
import { Route as LocaleAdminKeysRouteImport } from './routes/$locale/admin/keys'
import { Route as LocaleAdminCertificateRouteImport } from './routes/$locale/admin/certificate'
import { Route as LocaleLearnerCollectionsCollectionIdRouteImport } from './routes/$locale/learner/collections.$collectionId'
import { Route as LocaleAdminCoursesCreateRouteImport } from './routes/$locale/admin/courses.create'
import { Route as LocaleAdminCollectionsCreateRouteImport } from './routes/$locale/admin/collections.create'
import { Route as LocaleLearnerCoursesCourseIdIndexRouteImport } from './routes/$locale/learner/courses.$courseId.index'
import { Route as LocaleAdminCoursesCourseIdIndexRouteImport } from './routes/$locale/admin/courses.$courseId.index'
import { Route as LocaleLearnerCoursesCourseIdPlayRouteImport } from './routes/$locale/learner/courses.$courseId.play'
import { Route as LocaleAdminCoursesCourseIdWebhooksRouteImport } from './routes/$locale/admin/courses.$courseId.webhooks'
import { Route as LocaleAdminCoursesCourseIdStatisticsRouteImport } from './routes/$locale/admin/courses.$courseId.statistics'
import { Route as LocaleAdminCoursesCourseIdSharingRouteImport } from './routes/$locale/admin/courses.$courseId.sharing'
import { Route as LocaleAdminCoursesCourseIdSettingsRouteImport } from './routes/$locale/admin/courses.$courseId.settings'
import { Route as LocaleAdminCoursesCourseIdModulesRouteImport } from './routes/$locale/admin/courses.$courseId.modules'
import { Route as LocaleAdminCoursesCourseIdLearnersRouteImport } from './routes/$locale/admin/courses.$courseId.learners'
import { Route as LocaleAdminCollectionsCollectionIdSettingsRouteImport } from './routes/$locale/admin/collections.$collectionId.settings'
import { Route as LocaleAdminCollectionsCollectionIdLearnersRouteImport } from './routes/$locale/admin/collections.$collectionId.learners'
import { Route as LocaleAdminCollectionsCollectionIdCoursesRouteImport } from './routes/$locale/admin/collections.$collectionId.courses'

const LocaleIndexRoute = LocaleIndexRouteImport.update({
  id: '/$locale/',
  path: '/$locale/',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleNotAdminRoute = LocaleNotAdminRouteImport.update({
  id: '/$locale/not-admin',
  path: '/$locale/not-admin',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleLearnerRoute = LocaleLearnerRouteImport.update({
  id: '/$locale/learner',
  path: '/$locale/learner',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleIframeTestRoute = LocaleIframeTestRouteImport.update({
  id: '/$locale/iframe-test',
  path: '/$locale/iframe-test',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleCreateTeamRoute = LocaleCreateTeamRouteImport.update({
  id: '/$locale/create-team',
  path: '/$locale/create-team',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleAiRoute = LocaleAiRouteImport.update({
  id: '/$locale/ai',
  path: '/$locale/ai',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleAdminRoute = LocaleAdminRouteImport.update({
  id: '/$locale/admin',
  path: '/$locale/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleLearnerIndexRoute = LocaleLearnerIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleLearnerRoute,
} as any)
const LocaleAdminIndexRoute = LocaleAdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleAuthVerifyEmailRoute = LocaleAuthVerifyEmailRouteImport.update({
  id: '/$locale/auth/verify-email',
  path: '/$locale/auth/verify-email',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleAuthLoginRoute = LocaleAuthLoginRouteImport.update({
  id: '/$locale/auth/login',
  path: '/$locale/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const LocaleAdminSettingsRoute = LocaleAdminSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleAdminMembersRoute = LocaleAdminMembersRouteImport.update({
  id: '/members',
  path: '/members',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleAdminKeysRoute = LocaleAdminKeysRouteImport.update({
  id: '/keys',
  path: '/keys',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleAdminCertificateRoute = LocaleAdminCertificateRouteImport.update({
  id: '/certificate',
  path: '/certificate',
  getParentRoute: () => LocaleAdminRoute,
} as any)
const LocaleLearnerCollectionsCollectionIdRoute =
  LocaleLearnerCollectionsCollectionIdRouteImport.update({
    id: '/collections/$collectionId',
    path: '/collections/$collectionId',
    getParentRoute: () => LocaleLearnerRoute,
  } as any)
const LocaleAdminCoursesCreateRoute =
  LocaleAdminCoursesCreateRouteImport.update({
    id: '/courses/create',
    path: '/courses/create',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCollectionsCreateRoute =
  LocaleAdminCollectionsCreateRouteImport.update({
    id: '/collections/create',
    path: '/collections/create',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleLearnerCoursesCourseIdIndexRoute =
  LocaleLearnerCoursesCourseIdIndexRouteImport.update({
    id: '/courses/$courseId/',
    path: '/courses/$courseId/',
    getParentRoute: () => LocaleLearnerRoute,
  } as any)
const LocaleAdminCoursesCourseIdIndexRoute =
  LocaleAdminCoursesCourseIdIndexRouteImport.update({
    id: '/courses/$courseId/',
    path: '/courses/$courseId/',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleLearnerCoursesCourseIdPlayRoute =
  LocaleLearnerCoursesCourseIdPlayRouteImport.update({
    id: '/courses/$courseId/play',
    path: '/courses/$courseId/play',
    getParentRoute: () => LocaleLearnerRoute,
  } as any)
const LocaleAdminCoursesCourseIdWebhooksRoute =
  LocaleAdminCoursesCourseIdWebhooksRouteImport.update({
    id: '/courses/$courseId/webhooks',
    path: '/courses/$courseId/webhooks',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCoursesCourseIdStatisticsRoute =
  LocaleAdminCoursesCourseIdStatisticsRouteImport.update({
    id: '/courses/$courseId/statistics',
    path: '/courses/$courseId/statistics',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCoursesCourseIdSharingRoute =
  LocaleAdminCoursesCourseIdSharingRouteImport.update({
    id: '/courses/$courseId/sharing',
    path: '/courses/$courseId/sharing',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCoursesCourseIdSettingsRoute =
  LocaleAdminCoursesCourseIdSettingsRouteImport.update({
    id: '/courses/$courseId/settings',
    path: '/courses/$courseId/settings',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCoursesCourseIdModulesRoute =
  LocaleAdminCoursesCourseIdModulesRouteImport.update({
    id: '/courses/$courseId/modules',
    path: '/courses/$courseId/modules',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCoursesCourseIdLearnersRoute =
  LocaleAdminCoursesCourseIdLearnersRouteImport.update({
    id: '/courses/$courseId/learners',
    path: '/courses/$courseId/learners',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCollectionsCollectionIdSettingsRoute =
  LocaleAdminCollectionsCollectionIdSettingsRouteImport.update({
    id: '/collections/$collectionId/settings',
    path: '/collections/$collectionId/settings',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCollectionsCollectionIdLearnersRoute =
  LocaleAdminCollectionsCollectionIdLearnersRouteImport.update({
    id: '/collections/$collectionId/learners',
    path: '/collections/$collectionId/learners',
    getParentRoute: () => LocaleAdminRoute,
  } as any)
const LocaleAdminCollectionsCollectionIdCoursesRoute =
  LocaleAdminCollectionsCollectionIdCoursesRouteImport.update({
    id: '/collections/$collectionId/courses',
    path: '/collections/$collectionId/courses',
    getParentRoute: () => LocaleAdminRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/$locale/admin': typeof LocaleAdminRouteWithChildren
  '/$locale/ai': typeof LocaleAiRoute
  '/$locale/create-team': typeof LocaleCreateTeamRoute
  '/$locale/iframe-test': typeof LocaleIframeTestRoute
  '/$locale/learner': typeof LocaleLearnerRouteWithChildren
  '/$locale/not-admin': typeof LocaleNotAdminRoute
  '/$locale': typeof LocaleIndexRoute
  '/$locale/admin/certificate': typeof LocaleAdminCertificateRoute
  '/$locale/admin/keys': typeof LocaleAdminKeysRoute
  '/$locale/admin/members': typeof LocaleAdminMembersRoute
  '/$locale/admin/settings': typeof LocaleAdminSettingsRoute
  '/$locale/auth/login': typeof LocaleAuthLoginRoute
  '/$locale/auth/verify-email': typeof LocaleAuthVerifyEmailRoute
  '/$locale/admin/': typeof LocaleAdminIndexRoute
  '/$locale/learner/': typeof LocaleLearnerIndexRoute
  '/$locale/admin/collections/create': typeof LocaleAdminCollectionsCreateRoute
  '/$locale/admin/courses/create': typeof LocaleAdminCoursesCreateRoute
  '/$locale/learner/collections/$collectionId': typeof LocaleLearnerCollectionsCollectionIdRoute
  '/$locale/admin/collections/$collectionId/courses': typeof LocaleAdminCollectionsCollectionIdCoursesRoute
  '/$locale/admin/collections/$collectionId/learners': typeof LocaleAdminCollectionsCollectionIdLearnersRoute
  '/$locale/admin/collections/$collectionId/settings': typeof LocaleAdminCollectionsCollectionIdSettingsRoute
  '/$locale/admin/courses/$courseId/learners': typeof LocaleAdminCoursesCourseIdLearnersRoute
  '/$locale/admin/courses/$courseId/modules': typeof LocaleAdminCoursesCourseIdModulesRoute
  '/$locale/admin/courses/$courseId/settings': typeof LocaleAdminCoursesCourseIdSettingsRoute
  '/$locale/admin/courses/$courseId/sharing': typeof LocaleAdminCoursesCourseIdSharingRoute
  '/$locale/admin/courses/$courseId/statistics': typeof LocaleAdminCoursesCourseIdStatisticsRoute
  '/$locale/admin/courses/$courseId/webhooks': typeof LocaleAdminCoursesCourseIdWebhooksRoute
  '/$locale/learner/courses/$courseId/play': typeof LocaleLearnerCoursesCourseIdPlayRoute
  '/$locale/admin/courses/$courseId': typeof LocaleAdminCoursesCourseIdIndexRoute
  '/$locale/learner/courses/$courseId': typeof LocaleLearnerCoursesCourseIdIndexRoute
}
export interface FileRoutesByTo {
  '/$locale/ai': typeof LocaleAiRoute
  '/$locale/create-team': typeof LocaleCreateTeamRoute
  '/$locale/iframe-test': typeof LocaleIframeTestRoute
  '/$locale/not-admin': typeof LocaleNotAdminRoute
  '/$locale': typeof LocaleIndexRoute
  '/$locale/admin/certificate': typeof LocaleAdminCertificateRoute
  '/$locale/admin/keys': typeof LocaleAdminKeysRoute
  '/$locale/admin/members': typeof LocaleAdminMembersRoute
  '/$locale/admin/settings': typeof LocaleAdminSettingsRoute
  '/$locale/auth/login': typeof LocaleAuthLoginRoute
  '/$locale/auth/verify-email': typeof LocaleAuthVerifyEmailRoute
  '/$locale/admin': typeof LocaleAdminIndexRoute
  '/$locale/learner': typeof LocaleLearnerIndexRoute
  '/$locale/admin/collections/create': typeof LocaleAdminCollectionsCreateRoute
  '/$locale/admin/courses/create': typeof LocaleAdminCoursesCreateRoute
  '/$locale/learner/collections/$collectionId': typeof LocaleLearnerCollectionsCollectionIdRoute
  '/$locale/admin/collections/$collectionId/courses': typeof LocaleAdminCollectionsCollectionIdCoursesRoute
  '/$locale/admin/collections/$collectionId/learners': typeof LocaleAdminCollectionsCollectionIdLearnersRoute
  '/$locale/admin/collections/$collectionId/settings': typeof LocaleAdminCollectionsCollectionIdSettingsRoute
  '/$locale/admin/courses/$courseId/learners': typeof LocaleAdminCoursesCourseIdLearnersRoute
  '/$locale/admin/courses/$courseId/modules': typeof LocaleAdminCoursesCourseIdModulesRoute
  '/$locale/admin/courses/$courseId/settings': typeof LocaleAdminCoursesCourseIdSettingsRoute
  '/$locale/admin/courses/$courseId/sharing': typeof LocaleAdminCoursesCourseIdSharingRoute
  '/$locale/admin/courses/$courseId/statistics': typeof LocaleAdminCoursesCourseIdStatisticsRoute
  '/$locale/admin/courses/$courseId/webhooks': typeof LocaleAdminCoursesCourseIdWebhooksRoute
  '/$locale/learner/courses/$courseId/play': typeof LocaleLearnerCoursesCourseIdPlayRoute
  '/$locale/admin/courses/$courseId': typeof LocaleAdminCoursesCourseIdIndexRoute
  '/$locale/learner/courses/$courseId': typeof LocaleLearnerCoursesCourseIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/$locale/admin': typeof LocaleAdminRouteWithChildren
  '/$locale/ai': typeof LocaleAiRoute
  '/$locale/create-team': typeof LocaleCreateTeamRoute
  '/$locale/iframe-test': typeof LocaleIframeTestRoute
  '/$locale/learner': typeof LocaleLearnerRouteWithChildren
  '/$locale/not-admin': typeof LocaleNotAdminRoute
  '/$locale/': typeof LocaleIndexRoute
  '/$locale/admin/certificate': typeof LocaleAdminCertificateRoute
  '/$locale/admin/keys': typeof LocaleAdminKeysRoute
  '/$locale/admin/members': typeof LocaleAdminMembersRoute
  '/$locale/admin/settings': typeof LocaleAdminSettingsRoute
  '/$locale/auth/login': typeof LocaleAuthLoginRoute
  '/$locale/auth/verify-email': typeof LocaleAuthVerifyEmailRoute
  '/$locale/admin/': typeof LocaleAdminIndexRoute
  '/$locale/learner/': typeof LocaleLearnerIndexRoute
  '/$locale/admin/collections/create': typeof LocaleAdminCollectionsCreateRoute
  '/$locale/admin/courses/create': typeof LocaleAdminCoursesCreateRoute
  '/$locale/learner/collections/$collectionId': typeof LocaleLearnerCollectionsCollectionIdRoute
  '/$locale/admin/collections/$collectionId/courses': typeof LocaleAdminCollectionsCollectionIdCoursesRoute
  '/$locale/admin/collections/$collectionId/learners': typeof LocaleAdminCollectionsCollectionIdLearnersRoute
  '/$locale/admin/collections/$collectionId/settings': typeof LocaleAdminCollectionsCollectionIdSettingsRoute
  '/$locale/admin/courses/$courseId/learners': typeof LocaleAdminCoursesCourseIdLearnersRoute
  '/$locale/admin/courses/$courseId/modules': typeof LocaleAdminCoursesCourseIdModulesRoute
  '/$locale/admin/courses/$courseId/settings': typeof LocaleAdminCoursesCourseIdSettingsRoute
  '/$locale/admin/courses/$courseId/sharing': typeof LocaleAdminCoursesCourseIdSharingRoute
  '/$locale/admin/courses/$courseId/statistics': typeof LocaleAdminCoursesCourseIdStatisticsRoute
  '/$locale/admin/courses/$courseId/webhooks': typeof LocaleAdminCoursesCourseIdWebhooksRoute
  '/$locale/learner/courses/$courseId/play': typeof LocaleLearnerCoursesCourseIdPlayRoute
  '/$locale/admin/courses/$courseId/': typeof LocaleAdminCoursesCourseIdIndexRoute
  '/$locale/learner/courses/$courseId/': typeof LocaleLearnerCoursesCourseIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$locale/admin'
    | '/$locale/ai'
    | '/$locale/create-team'
    | '/$locale/iframe-test'
    | '/$locale/learner'
    | '/$locale/not-admin'
    | '/$locale'
    | '/$locale/admin/certificate'
    | '/$locale/admin/keys'
    | '/$locale/admin/members'
    | '/$locale/admin/settings'
    | '/$locale/auth/login'
    | '/$locale/auth/verify-email'
    | '/$locale/admin/'
    | '/$locale/learner/'
    | '/$locale/admin/collections/create'
    | '/$locale/admin/courses/create'
    | '/$locale/learner/collections/$collectionId'
    | '/$locale/admin/collections/$collectionId/courses'
    | '/$locale/admin/collections/$collectionId/learners'
    | '/$locale/admin/collections/$collectionId/settings'
    | '/$locale/admin/courses/$courseId/learners'
    | '/$locale/admin/courses/$courseId/modules'
    | '/$locale/admin/courses/$courseId/settings'
    | '/$locale/admin/courses/$courseId/sharing'
    | '/$locale/admin/courses/$courseId/statistics'
    | '/$locale/admin/courses/$courseId/webhooks'
    | '/$locale/learner/courses/$courseId/play'
    | '/$locale/admin/courses/$courseId'
    | '/$locale/learner/courses/$courseId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$locale/ai'
    | '/$locale/create-team'
    | '/$locale/iframe-test'
    | '/$locale/not-admin'
    | '/$locale'
    | '/$locale/admin/certificate'
    | '/$locale/admin/keys'
    | '/$locale/admin/members'
    | '/$locale/admin/settings'
    | '/$locale/auth/login'
    | '/$locale/auth/verify-email'
    | '/$locale/admin'
    | '/$locale/learner'
    | '/$locale/admin/collections/create'
    | '/$locale/admin/courses/create'
    | '/$locale/learner/collections/$collectionId'
    | '/$locale/admin/collections/$collectionId/courses'
    | '/$locale/admin/collections/$collectionId/learners'
    | '/$locale/admin/collections/$collectionId/settings'
    | '/$locale/admin/courses/$courseId/learners'
    | '/$locale/admin/courses/$courseId/modules'
    | '/$locale/admin/courses/$courseId/settings'
    | '/$locale/admin/courses/$courseId/sharing'
    | '/$locale/admin/courses/$courseId/statistics'
    | '/$locale/admin/courses/$courseId/webhooks'
    | '/$locale/learner/courses/$courseId/play'
    | '/$locale/admin/courses/$courseId'
    | '/$locale/learner/courses/$courseId'
  id:
    | '__root__'
    | '/$locale/admin'
    | '/$locale/ai'
    | '/$locale/create-team'
    | '/$locale/iframe-test'
    | '/$locale/learner'
    | '/$locale/not-admin'
    | '/$locale/'
    | '/$locale/admin/certificate'
    | '/$locale/admin/keys'
    | '/$locale/admin/members'
    | '/$locale/admin/settings'
    | '/$locale/auth/login'
    | '/$locale/auth/verify-email'
    | '/$locale/admin/'
    | '/$locale/learner/'
    | '/$locale/admin/collections/create'
    | '/$locale/admin/courses/create'
    | '/$locale/learner/collections/$collectionId'
    | '/$locale/admin/collections/$collectionId/courses'
    | '/$locale/admin/collections/$collectionId/learners'
    | '/$locale/admin/collections/$collectionId/settings'
    | '/$locale/admin/courses/$courseId/learners'
    | '/$locale/admin/courses/$courseId/modules'
    | '/$locale/admin/courses/$courseId/settings'
    | '/$locale/admin/courses/$courseId/sharing'
    | '/$locale/admin/courses/$courseId/statistics'
    | '/$locale/admin/courses/$courseId/webhooks'
    | '/$locale/learner/courses/$courseId/play'
    | '/$locale/admin/courses/$courseId/'
    | '/$locale/learner/courses/$courseId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LocaleAdminRoute: typeof LocaleAdminRouteWithChildren
  LocaleAiRoute: typeof LocaleAiRoute
  LocaleCreateTeamRoute: typeof LocaleCreateTeamRoute
  LocaleIframeTestRoute: typeof LocaleIframeTestRoute
  LocaleLearnerRoute: typeof LocaleLearnerRouteWithChildren
  LocaleNotAdminRoute: typeof LocaleNotAdminRoute
  LocaleIndexRoute: typeof LocaleIndexRoute
  LocaleAuthLoginRoute: typeof LocaleAuthLoginRoute
  LocaleAuthVerifyEmailRoute: typeof LocaleAuthVerifyEmailRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$locale/': {
      id: '/$locale/'
      path: '/$locale'
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/not-admin': {
      id: '/$locale/not-admin'
      path: '/$locale/not-admin'
      fullPath: '/$locale/not-admin'
      preLoaderRoute: typeof LocaleNotAdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/learner': {
      id: '/$locale/learner'
      path: '/$locale/learner'
      fullPath: '/$locale/learner'
      preLoaderRoute: typeof LocaleLearnerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/iframe-test': {
      id: '/$locale/iframe-test'
      path: '/$locale/iframe-test'
      fullPath: '/$locale/iframe-test'
      preLoaderRoute: typeof LocaleIframeTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/create-team': {
      id: '/$locale/create-team'
      path: '/$locale/create-team'
      fullPath: '/$locale/create-team'
      preLoaderRoute: typeof LocaleCreateTeamRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/ai': {
      id: '/$locale/ai'
      path: '/$locale/ai'
      fullPath: '/$locale/ai'
      preLoaderRoute: typeof LocaleAiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/admin': {
      id: '/$locale/admin'
      path: '/$locale/admin'
      fullPath: '/$locale/admin'
      preLoaderRoute: typeof LocaleAdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/learner/': {
      id: '/$locale/learner/'
      path: '/'
      fullPath: '/$locale/learner/'
      preLoaderRoute: typeof LocaleLearnerIndexRouteImport
      parentRoute: typeof LocaleLearnerRoute
    }
    '/$locale/admin/': {
      id: '/$locale/admin/'
      path: '/'
      fullPath: '/$locale/admin/'
      preLoaderRoute: typeof LocaleAdminIndexRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/auth/verify-email': {
      id: '/$locale/auth/verify-email'
      path: '/$locale/auth/verify-email'
      fullPath: '/$locale/auth/verify-email'
      preLoaderRoute: typeof LocaleAuthVerifyEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/auth/login': {
      id: '/$locale/auth/login'
      path: '/$locale/auth/login'
      fullPath: '/$locale/auth/login'
      preLoaderRoute: typeof LocaleAuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$locale/admin/settings': {
      id: '/$locale/admin/settings'
      path: '/settings'
      fullPath: '/$locale/admin/settings'
      preLoaderRoute: typeof LocaleAdminSettingsRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/members': {
      id: '/$locale/admin/members'
      path: '/members'
      fullPath: '/$locale/admin/members'
      preLoaderRoute: typeof LocaleAdminMembersRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/keys': {
      id: '/$locale/admin/keys'
      path: '/keys'
      fullPath: '/$locale/admin/keys'
      preLoaderRoute: typeof LocaleAdminKeysRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/certificate': {
      id: '/$locale/admin/certificate'
      path: '/certificate'
      fullPath: '/$locale/admin/certificate'
      preLoaderRoute: typeof LocaleAdminCertificateRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/learner/collections/$collectionId': {
      id: '/$locale/learner/collections/$collectionId'
      path: '/collections/$collectionId'
      fullPath: '/$locale/learner/collections/$collectionId'
      preLoaderRoute: typeof LocaleLearnerCollectionsCollectionIdRouteImport
      parentRoute: typeof LocaleLearnerRoute
    }
    '/$locale/admin/courses/create': {
      id: '/$locale/admin/courses/create'
      path: '/courses/create'
      fullPath: '/$locale/admin/courses/create'
      preLoaderRoute: typeof LocaleAdminCoursesCreateRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/collections/create': {
      id: '/$locale/admin/collections/create'
      path: '/collections/create'
      fullPath: '/$locale/admin/collections/create'
      preLoaderRoute: typeof LocaleAdminCollectionsCreateRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/learner/courses/$courseId/': {
      id: '/$locale/learner/courses/$courseId/'
      path: '/courses/$courseId'
      fullPath: '/$locale/learner/courses/$courseId'
      preLoaderRoute: typeof LocaleLearnerCoursesCourseIdIndexRouteImport
      parentRoute: typeof LocaleLearnerRoute
    }
    '/$locale/admin/courses/$courseId/': {
      id: '/$locale/admin/courses/$courseId/'
      path: '/courses/$courseId'
      fullPath: '/$locale/admin/courses/$courseId'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdIndexRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/learner/courses/$courseId/play': {
      id: '/$locale/learner/courses/$courseId/play'
      path: '/courses/$courseId/play'
      fullPath: '/$locale/learner/courses/$courseId/play'
      preLoaderRoute: typeof LocaleLearnerCoursesCourseIdPlayRouteImport
      parentRoute: typeof LocaleLearnerRoute
    }
    '/$locale/admin/courses/$courseId/webhooks': {
      id: '/$locale/admin/courses/$courseId/webhooks'
      path: '/courses/$courseId/webhooks'
      fullPath: '/$locale/admin/courses/$courseId/webhooks'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdWebhooksRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/courses/$courseId/statistics': {
      id: '/$locale/admin/courses/$courseId/statistics'
      path: '/courses/$courseId/statistics'
      fullPath: '/$locale/admin/courses/$courseId/statistics'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdStatisticsRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/courses/$courseId/sharing': {
      id: '/$locale/admin/courses/$courseId/sharing'
      path: '/courses/$courseId/sharing'
      fullPath: '/$locale/admin/courses/$courseId/sharing'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdSharingRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/courses/$courseId/settings': {
      id: '/$locale/admin/courses/$courseId/settings'
      path: '/courses/$courseId/settings'
      fullPath: '/$locale/admin/courses/$courseId/settings'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdSettingsRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/courses/$courseId/modules': {
      id: '/$locale/admin/courses/$courseId/modules'
      path: '/courses/$courseId/modules'
      fullPath: '/$locale/admin/courses/$courseId/modules'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdModulesRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/courses/$courseId/learners': {
      id: '/$locale/admin/courses/$courseId/learners'
      path: '/courses/$courseId/learners'
      fullPath: '/$locale/admin/courses/$courseId/learners'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdLearnersRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/collections/$collectionId/settings': {
      id: '/$locale/admin/collections/$collectionId/settings'
      path: '/collections/$collectionId/settings'
      fullPath: '/$locale/admin/collections/$collectionId/settings'
      preLoaderRoute: typeof LocaleAdminCollectionsCollectionIdSettingsRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/collections/$collectionId/learners': {
      id: '/$locale/admin/collections/$collectionId/learners'
      path: '/collections/$collectionId/learners'
      fullPath: '/$locale/admin/collections/$collectionId/learners'
      preLoaderRoute: typeof LocaleAdminCollectionsCollectionIdLearnersRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
    '/$locale/admin/collections/$collectionId/courses': {
      id: '/$locale/admin/collections/$collectionId/courses'
      path: '/collections/$collectionId/courses'
      fullPath: '/$locale/admin/collections/$collectionId/courses'
      preLoaderRoute: typeof LocaleAdminCollectionsCollectionIdCoursesRouteImport
      parentRoute: typeof LocaleAdminRoute
    }
  }
}

interface LocaleAdminRouteChildren {
  LocaleAdminCertificateRoute: typeof LocaleAdminCertificateRoute
  LocaleAdminKeysRoute: typeof LocaleAdminKeysRoute
  LocaleAdminMembersRoute: typeof LocaleAdminMembersRoute
  LocaleAdminSettingsRoute: typeof LocaleAdminSettingsRoute
  LocaleAdminIndexRoute: typeof LocaleAdminIndexRoute
  LocaleAdminCollectionsCreateRoute: typeof LocaleAdminCollectionsCreateRoute
  LocaleAdminCoursesCreateRoute: typeof LocaleAdminCoursesCreateRoute
  LocaleAdminCollectionsCollectionIdCoursesRoute: typeof LocaleAdminCollectionsCollectionIdCoursesRoute
  LocaleAdminCollectionsCollectionIdLearnersRoute: typeof LocaleAdminCollectionsCollectionIdLearnersRoute
  LocaleAdminCollectionsCollectionIdSettingsRoute: typeof LocaleAdminCollectionsCollectionIdSettingsRoute
  LocaleAdminCoursesCourseIdLearnersRoute: typeof LocaleAdminCoursesCourseIdLearnersRoute
  LocaleAdminCoursesCourseIdModulesRoute: typeof LocaleAdminCoursesCourseIdModulesRoute
  LocaleAdminCoursesCourseIdSettingsRoute: typeof LocaleAdminCoursesCourseIdSettingsRoute
  LocaleAdminCoursesCourseIdSharingRoute: typeof LocaleAdminCoursesCourseIdSharingRoute
  LocaleAdminCoursesCourseIdStatisticsRoute: typeof LocaleAdminCoursesCourseIdStatisticsRoute
  LocaleAdminCoursesCourseIdWebhooksRoute: typeof LocaleAdminCoursesCourseIdWebhooksRoute
  LocaleAdminCoursesCourseIdIndexRoute: typeof LocaleAdminCoursesCourseIdIndexRoute
}

const LocaleAdminRouteChildren: LocaleAdminRouteChildren = {
  LocaleAdminCertificateRoute: LocaleAdminCertificateRoute,
  LocaleAdminKeysRoute: LocaleAdminKeysRoute,
  LocaleAdminMembersRoute: LocaleAdminMembersRoute,
  LocaleAdminSettingsRoute: LocaleAdminSettingsRoute,
  LocaleAdminIndexRoute: LocaleAdminIndexRoute,
  LocaleAdminCollectionsCreateRoute: LocaleAdminCollectionsCreateRoute,
  LocaleAdminCoursesCreateRoute: LocaleAdminCoursesCreateRoute,
  LocaleAdminCollectionsCollectionIdCoursesRoute:
    LocaleAdminCollectionsCollectionIdCoursesRoute,
  LocaleAdminCollectionsCollectionIdLearnersRoute:
    LocaleAdminCollectionsCollectionIdLearnersRoute,
  LocaleAdminCollectionsCollectionIdSettingsRoute:
    LocaleAdminCollectionsCollectionIdSettingsRoute,
  LocaleAdminCoursesCourseIdLearnersRoute:
    LocaleAdminCoursesCourseIdLearnersRoute,
  LocaleAdminCoursesCourseIdModulesRoute:
    LocaleAdminCoursesCourseIdModulesRoute,
  LocaleAdminCoursesCourseIdSettingsRoute:
    LocaleAdminCoursesCourseIdSettingsRoute,
  LocaleAdminCoursesCourseIdSharingRoute:
    LocaleAdminCoursesCourseIdSharingRoute,
  LocaleAdminCoursesCourseIdStatisticsRoute:
    LocaleAdminCoursesCourseIdStatisticsRoute,
  LocaleAdminCoursesCourseIdWebhooksRoute:
    LocaleAdminCoursesCourseIdWebhooksRoute,
  LocaleAdminCoursesCourseIdIndexRoute: LocaleAdminCoursesCourseIdIndexRoute,
}

const LocaleAdminRouteWithChildren = LocaleAdminRoute._addFileChildren(
  LocaleAdminRouteChildren,
)

interface LocaleLearnerRouteChildren {
  LocaleLearnerIndexRoute: typeof LocaleLearnerIndexRoute
  LocaleLearnerCollectionsCollectionIdRoute: typeof LocaleLearnerCollectionsCollectionIdRoute
  LocaleLearnerCoursesCourseIdPlayRoute: typeof LocaleLearnerCoursesCourseIdPlayRoute
  LocaleLearnerCoursesCourseIdIndexRoute: typeof LocaleLearnerCoursesCourseIdIndexRoute
}

const LocaleLearnerRouteChildren: LocaleLearnerRouteChildren = {
  LocaleLearnerIndexRoute: LocaleLearnerIndexRoute,
  LocaleLearnerCollectionsCollectionIdRoute:
    LocaleLearnerCollectionsCollectionIdRoute,
  LocaleLearnerCoursesCourseIdPlayRoute: LocaleLearnerCoursesCourseIdPlayRoute,
  LocaleLearnerCoursesCourseIdIndexRoute:
    LocaleLearnerCoursesCourseIdIndexRoute,
}

const LocaleLearnerRouteWithChildren = LocaleLearnerRoute._addFileChildren(
  LocaleLearnerRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  LocaleAdminRoute: LocaleAdminRouteWithChildren,
  LocaleAiRoute: LocaleAiRoute,
  LocaleCreateTeamRoute: LocaleCreateTeamRoute,
  LocaleIframeTestRoute: LocaleIframeTestRoute,
  LocaleLearnerRoute: LocaleLearnerRouteWithChildren,
  LocaleNotAdminRoute: LocaleNotAdminRoute,
  LocaleIndexRoute: LocaleIndexRoute,
  LocaleAuthLoginRoute: LocaleAuthLoginRoute,
  LocaleAuthVerifyEmailRoute: LocaleAuthVerifyEmailRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
