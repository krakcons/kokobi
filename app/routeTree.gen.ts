/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LocaleIndexImport } from './routes/$locale/index'
import { Route as LocaleNotAdminImport } from './routes/$locale/not-admin'
import { Route as LocaleLearnerImport } from './routes/$locale/learner'
import { Route as LocaleCreateTeamImport } from './routes/$locale/create-team'
import { Route as LocaleAiImport } from './routes/$locale/ai'
import { Route as LocaleAdminImport } from './routes/$locale/admin'
import { Route as LocaleLearnerIndexImport } from './routes/$locale/learner/index'
import { Route as LocaleAdminIndexImport } from './routes/$locale/admin/index'
import { Route as LocaleAuthVerifyEmailImport } from './routes/$locale/auth/verify-email'
import { Route as LocaleAuthLoginImport } from './routes/$locale/auth/login'
import { Route as LocaleAdminSettingsImport } from './routes/$locale/admin/settings'
import { Route as LocaleAdminMembersImport } from './routes/$locale/admin/members'
import { Route as LocaleAdminKeysImport } from './routes/$locale/admin/keys'
import { Route as LocaleAdminCertificateImport } from './routes/$locale/admin/certificate'
import { Route as LocaleLearnerCollectionsCollectionIdImport } from './routes/$locale/learner/collections.$collectionId'
import { Route as LocaleAdminCoursesCreateImport } from './routes/$locale/admin/courses.create'
import { Route as LocaleAdminCollectionsCreateImport } from './routes/$locale/admin/collections.create'
import { Route as LocaleLearnerCoursesCourseIdIndexImport } from './routes/$locale/learner/courses.$courseId.index'
import { Route as LocaleLearnerCoursesCourseIdPlayImport } from './routes/$locale/learner/courses.$courseId.play'
import { Route as LocaleAdminCoursesCourseIdWebhooksImport } from './routes/$locale/admin/courses.$courseId.webhooks'
import { Route as LocaleAdminCoursesCourseIdStatisticsImport } from './routes/$locale/admin/courses.$courseId.statistics'
import { Route as LocaleAdminCoursesCourseIdSharingImport } from './routes/$locale/admin/courses.$courseId.sharing'
import { Route as LocaleAdminCoursesCourseIdSettingsImport } from './routes/$locale/admin/courses.$courseId.settings'
import { Route as LocaleAdminCoursesCourseIdModulesImport } from './routes/$locale/admin/courses.$courseId.modules'
import { Route as LocaleAdminCoursesCourseIdLearnersImport } from './routes/$locale/admin/courses.$courseId.learners'
import { Route as LocaleAdminCollectionsCollectionIdSettingsImport } from './routes/$locale/admin/collections.$collectionId.settings'
import { Route as LocaleAdminCollectionsCollectionIdLearnersImport } from './routes/$locale/admin/collections.$collectionId.learners'
import { Route as LocaleAdminCollectionsCollectionIdCoursesImport } from './routes/$locale/admin/collections.$collectionId.courses'

// Create/Update Routes

const LocaleIndexRoute = LocaleIndexImport.update({
  id: '/$locale/',
  path: '/$locale/',
  getParentRoute: () => rootRoute,
} as any)

const LocaleNotAdminRoute = LocaleNotAdminImport.update({
  id: '/$locale/not-admin',
  path: '/$locale/not-admin',
  getParentRoute: () => rootRoute,
} as any)

const LocaleLearnerRoute = LocaleLearnerImport.update({
  id: '/$locale/learner',
  path: '/$locale/learner',
  getParentRoute: () => rootRoute,
} as any)

const LocaleCreateTeamRoute = LocaleCreateTeamImport.update({
  id: '/$locale/create-team',
  path: '/$locale/create-team',
  getParentRoute: () => rootRoute,
} as any)

const LocaleAiRoute = LocaleAiImport.update({
  id: '/$locale/ai',
  path: '/$locale/ai',
  getParentRoute: () => rootRoute,
} as any)

const LocaleAdminRoute = LocaleAdminImport.update({
  id: '/$locale/admin',
  path: '/$locale/admin',
  getParentRoute: () => rootRoute,
} as any)

const LocaleLearnerIndexRoute = LocaleLearnerIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleLearnerRoute,
} as any)

const LocaleAdminIndexRoute = LocaleAdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleAuthVerifyEmailRoute = LocaleAuthVerifyEmailImport.update({
  id: '/$locale/auth/verify-email',
  path: '/$locale/auth/verify-email',
  getParentRoute: () => rootRoute,
} as any)

const LocaleAuthLoginRoute = LocaleAuthLoginImport.update({
  id: '/$locale/auth/login',
  path: '/$locale/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const LocaleAdminSettingsRoute = LocaleAdminSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleAdminMembersRoute = LocaleAdminMembersImport.update({
  id: '/members',
  path: '/members',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleAdminKeysRoute = LocaleAdminKeysImport.update({
  id: '/keys',
  path: '/keys',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleAdminCertificateRoute = LocaleAdminCertificateImport.update({
  id: '/certificate',
  path: '/certificate',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleLearnerCollectionsCollectionIdRoute =
  LocaleLearnerCollectionsCollectionIdImport.update({
    id: '/collections/$collectionId',
    path: '/collections/$collectionId',
    getParentRoute: () => LocaleLearnerRoute,
  } as any)

const LocaleAdminCoursesCreateRoute = LocaleAdminCoursesCreateImport.update({
  id: '/courses/create',
  path: '/courses/create',
  getParentRoute: () => LocaleAdminRoute,
} as any)

const LocaleAdminCollectionsCreateRoute =
  LocaleAdminCollectionsCreateImport.update({
    id: '/collections/create',
    path: '/collections/create',
    getParentRoute: () => LocaleAdminRoute,
  } as any)

const LocaleLearnerCoursesCourseIdIndexRoute =
  LocaleLearnerCoursesCourseIdIndexImport.update({
    id: '/courses/$courseId/',
    path: '/courses/$courseId/',
    getParentRoute: () => LocaleLearnerRoute,
  } as any)

const LocaleLearnerCoursesCourseIdPlayRoute =
  LocaleLearnerCoursesCourseIdPlayImport.update({
    id: '/courses/$courseId/play',
    path: '/courses/$courseId/play',
    getParentRoute: () => LocaleLearnerRoute,
  } as any)

const LocaleAdminCoursesCourseIdWebhooksRoute =
  LocaleAdminCoursesCourseIdWebhooksImport.update({
    id: '/courses/$courseId/webhooks',
    path: '/courses/$courseId/webhooks',
    getParentRoute: () => LocaleAdminRoute,
  } as any)

const LocaleAdminCoursesCourseIdStatisticsRoute =
  LocaleAdminCoursesCourseIdStatisticsImport.update({
    id: '/courses/$courseId/statistics',
    path: '/courses/$courseId/statistics',
    getParentRoute: () => LocaleAdminRoute,
  } as any)

const LocaleAdminCoursesCourseIdSharingRoute =
  LocaleAdminCoursesCourseIdSharingImport.update({
    id: '/courses/$courseId/sharing',
    path: '/courses/$courseId/sharing',
    getParentRoute: () => LocaleAdminRoute,
  } as any)

const LocaleAdminCoursesCourseIdSettingsRoute =
  LocaleAdminCoursesCourseIdSettingsImport.update({
    id: '/courses/$courseId/settings',
    path: '/courses/$courseId/settings',
    getParentRoute: () => LocaleAdminRoute,
  } as any)

const LocaleAdminCoursesCourseIdModulesRoute =
  LocaleAdminCoursesCourseIdModulesImport.update({
    id: '/courses/$courseId/modules',
    path: '/courses/$courseId/modules',
    getParentRoute: () => LocaleAdminRoute,
  } as any)

const LocaleAdminCoursesCourseIdLearnersRoute =
  LocaleAdminCoursesCourseIdLearnersImport.update({
    id: '/courses/$courseId/learners',
    path: '/courses/$courseId/learners',
    getParentRoute: () => LocaleAdminRoute,
  } as any)

const LocaleAdminCollectionsCollectionIdSettingsRoute =
  LocaleAdminCollectionsCollectionIdSettingsImport.update({
    id: '/collections/$collectionId/settings',
    path: '/collections/$collectionId/settings',
    getParentRoute: () => LocaleAdminRoute,
  } as any)

const LocaleAdminCollectionsCollectionIdLearnersRoute =
  LocaleAdminCollectionsCollectionIdLearnersImport.update({
    id: '/collections/$collectionId/learners',
    path: '/collections/$collectionId/learners',
    getParentRoute: () => LocaleAdminRoute,
  } as any)

const LocaleAdminCollectionsCollectionIdCoursesRoute =
  LocaleAdminCollectionsCollectionIdCoursesImport.update({
    id: '/collections/$collectionId/courses',
    path: '/collections/$collectionId/courses',
    getParentRoute: () => LocaleAdminRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$locale/admin': {
      id: '/$locale/admin'
      path: '/$locale/admin'
      fullPath: '/$locale/admin'
      preLoaderRoute: typeof LocaleAdminImport
      parentRoute: typeof rootRoute
    }
    '/$locale/ai': {
      id: '/$locale/ai'
      path: '/$locale/ai'
      fullPath: '/$locale/ai'
      preLoaderRoute: typeof LocaleAiImport
      parentRoute: typeof rootRoute
    }
    '/$locale/create-team': {
      id: '/$locale/create-team'
      path: '/$locale/create-team'
      fullPath: '/$locale/create-team'
      preLoaderRoute: typeof LocaleCreateTeamImport
      parentRoute: typeof rootRoute
    }
    '/$locale/learner': {
      id: '/$locale/learner'
      path: '/$locale/learner'
      fullPath: '/$locale/learner'
      preLoaderRoute: typeof LocaleLearnerImport
      parentRoute: typeof rootRoute
    }
    '/$locale/not-admin': {
      id: '/$locale/not-admin'
      path: '/$locale/not-admin'
      fullPath: '/$locale/not-admin'
      preLoaderRoute: typeof LocaleNotAdminImport
      parentRoute: typeof rootRoute
    }
    '/$locale/': {
      id: '/$locale/'
      path: '/$locale'
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleIndexImport
      parentRoute: typeof rootRoute
    }
    '/$locale/admin/certificate': {
      id: '/$locale/admin/certificate'
      path: '/certificate'
      fullPath: '/$locale/admin/certificate'
      preLoaderRoute: typeof LocaleAdminCertificateImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/keys': {
      id: '/$locale/admin/keys'
      path: '/keys'
      fullPath: '/$locale/admin/keys'
      preLoaderRoute: typeof LocaleAdminKeysImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/members': {
      id: '/$locale/admin/members'
      path: '/members'
      fullPath: '/$locale/admin/members'
      preLoaderRoute: typeof LocaleAdminMembersImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/settings': {
      id: '/$locale/admin/settings'
      path: '/settings'
      fullPath: '/$locale/admin/settings'
      preLoaderRoute: typeof LocaleAdminSettingsImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/auth/login': {
      id: '/$locale/auth/login'
      path: '/$locale/auth/login'
      fullPath: '/$locale/auth/login'
      preLoaderRoute: typeof LocaleAuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/$locale/auth/verify-email': {
      id: '/$locale/auth/verify-email'
      path: '/$locale/auth/verify-email'
      fullPath: '/$locale/auth/verify-email'
      preLoaderRoute: typeof LocaleAuthVerifyEmailImport
      parentRoute: typeof rootRoute
    }
    '/$locale/admin/': {
      id: '/$locale/admin/'
      path: '/'
      fullPath: '/$locale/admin/'
      preLoaderRoute: typeof LocaleAdminIndexImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/learner/': {
      id: '/$locale/learner/'
      path: '/'
      fullPath: '/$locale/learner/'
      preLoaderRoute: typeof LocaleLearnerIndexImport
      parentRoute: typeof LocaleLearnerImport
    }
    '/$locale/admin/collections/create': {
      id: '/$locale/admin/collections/create'
      path: '/collections/create'
      fullPath: '/$locale/admin/collections/create'
      preLoaderRoute: typeof LocaleAdminCollectionsCreateImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/courses/create': {
      id: '/$locale/admin/courses/create'
      path: '/courses/create'
      fullPath: '/$locale/admin/courses/create'
      preLoaderRoute: typeof LocaleAdminCoursesCreateImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/learner/collections/$collectionId': {
      id: '/$locale/learner/collections/$collectionId'
      path: '/collections/$collectionId'
      fullPath: '/$locale/learner/collections/$collectionId'
      preLoaderRoute: typeof LocaleLearnerCollectionsCollectionIdImport
      parentRoute: typeof LocaleLearnerImport
    }
    '/$locale/admin/collections/$collectionId/courses': {
      id: '/$locale/admin/collections/$collectionId/courses'
      path: '/collections/$collectionId/courses'
      fullPath: '/$locale/admin/collections/$collectionId/courses'
      preLoaderRoute: typeof LocaleAdminCollectionsCollectionIdCoursesImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/collections/$collectionId/learners': {
      id: '/$locale/admin/collections/$collectionId/learners'
      path: '/collections/$collectionId/learners'
      fullPath: '/$locale/admin/collections/$collectionId/learners'
      preLoaderRoute: typeof LocaleAdminCollectionsCollectionIdLearnersImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/collections/$collectionId/settings': {
      id: '/$locale/admin/collections/$collectionId/settings'
      path: '/collections/$collectionId/settings'
      fullPath: '/$locale/admin/collections/$collectionId/settings'
      preLoaderRoute: typeof LocaleAdminCollectionsCollectionIdSettingsImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/courses/$courseId/learners': {
      id: '/$locale/admin/courses/$courseId/learners'
      path: '/courses/$courseId/learners'
      fullPath: '/$locale/admin/courses/$courseId/learners'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdLearnersImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/courses/$courseId/modules': {
      id: '/$locale/admin/courses/$courseId/modules'
      path: '/courses/$courseId/modules'
      fullPath: '/$locale/admin/courses/$courseId/modules'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdModulesImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/courses/$courseId/settings': {
      id: '/$locale/admin/courses/$courseId/settings'
      path: '/courses/$courseId/settings'
      fullPath: '/$locale/admin/courses/$courseId/settings'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdSettingsImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/courses/$courseId/sharing': {
      id: '/$locale/admin/courses/$courseId/sharing'
      path: '/courses/$courseId/sharing'
      fullPath: '/$locale/admin/courses/$courseId/sharing'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdSharingImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/courses/$courseId/statistics': {
      id: '/$locale/admin/courses/$courseId/statistics'
      path: '/courses/$courseId/statistics'
      fullPath: '/$locale/admin/courses/$courseId/statistics'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdStatisticsImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/admin/courses/$courseId/webhooks': {
      id: '/$locale/admin/courses/$courseId/webhooks'
      path: '/courses/$courseId/webhooks'
      fullPath: '/$locale/admin/courses/$courseId/webhooks'
      preLoaderRoute: typeof LocaleAdminCoursesCourseIdWebhooksImport
      parentRoute: typeof LocaleAdminImport
    }
    '/$locale/learner/courses/$courseId/play': {
      id: '/$locale/learner/courses/$courseId/play'
      path: '/courses/$courseId/play'
      fullPath: '/$locale/learner/courses/$courseId/play'
      preLoaderRoute: typeof LocaleLearnerCoursesCourseIdPlayImport
      parentRoute: typeof LocaleLearnerImport
    }
    '/$locale/learner/courses/$courseId/': {
      id: '/$locale/learner/courses/$courseId/'
      path: '/courses/$courseId'
      fullPath: '/$locale/learner/courses/$courseId'
      preLoaderRoute: typeof LocaleLearnerCoursesCourseIdIndexImport
      parentRoute: typeof LocaleLearnerImport
    }
  }
}

// Create and export the route tree

interface LocaleAdminRouteChildren {
  LocaleAdminCertificateRoute: typeof LocaleAdminCertificateRoute
  LocaleAdminKeysRoute: typeof LocaleAdminKeysRoute
  LocaleAdminMembersRoute: typeof LocaleAdminMembersRoute
  LocaleAdminSettingsRoute: typeof LocaleAdminSettingsRoute
  LocaleAdminIndexRoute: typeof LocaleAdminIndexRoute
  LocaleAdminCollectionsCreateRoute: typeof LocaleAdminCollectionsCreateRoute
  LocaleAdminCoursesCreateRoute: typeof LocaleAdminCoursesCreateRoute
  LocaleAdminCollectionsCollectionIdCoursesRoute: typeof LocaleAdminCollectionsCollectionIdCoursesRoute
  LocaleAdminCollectionsCollectionIdLearnersRoute: typeof LocaleAdminCollectionsCollectionIdLearnersRoute
  LocaleAdminCollectionsCollectionIdSettingsRoute: typeof LocaleAdminCollectionsCollectionIdSettingsRoute
  LocaleAdminCoursesCourseIdLearnersRoute: typeof LocaleAdminCoursesCourseIdLearnersRoute
  LocaleAdminCoursesCourseIdModulesRoute: typeof LocaleAdminCoursesCourseIdModulesRoute
  LocaleAdminCoursesCourseIdSettingsRoute: typeof LocaleAdminCoursesCourseIdSettingsRoute
  LocaleAdminCoursesCourseIdSharingRoute: typeof LocaleAdminCoursesCourseIdSharingRoute
  LocaleAdminCoursesCourseIdStatisticsRoute: typeof LocaleAdminCoursesCourseIdStatisticsRoute
  LocaleAdminCoursesCourseIdWebhooksRoute: typeof LocaleAdminCoursesCourseIdWebhooksRoute
}

const LocaleAdminRouteChildren: LocaleAdminRouteChildren = {
  LocaleAdminCertificateRoute: LocaleAdminCertificateRoute,
  LocaleAdminKeysRoute: LocaleAdminKeysRoute,
  LocaleAdminMembersRoute: LocaleAdminMembersRoute,
  LocaleAdminSettingsRoute: LocaleAdminSettingsRoute,
  LocaleAdminIndexRoute: LocaleAdminIndexRoute,
  LocaleAdminCollectionsCreateRoute: LocaleAdminCollectionsCreateRoute,
  LocaleAdminCoursesCreateRoute: LocaleAdminCoursesCreateRoute,
  LocaleAdminCollectionsCollectionIdCoursesRoute:
    LocaleAdminCollectionsCollectionIdCoursesRoute,
  LocaleAdminCollectionsCollectionIdLearnersRoute:
    LocaleAdminCollectionsCollectionIdLearnersRoute,
  LocaleAdminCollectionsCollectionIdSettingsRoute:
    LocaleAdminCollectionsCollectionIdSettingsRoute,
  LocaleAdminCoursesCourseIdLearnersRoute:
    LocaleAdminCoursesCourseIdLearnersRoute,
  LocaleAdminCoursesCourseIdModulesRoute:
    LocaleAdminCoursesCourseIdModulesRoute,
  LocaleAdminCoursesCourseIdSettingsRoute:
    LocaleAdminCoursesCourseIdSettingsRoute,
  LocaleAdminCoursesCourseIdSharingRoute:
    LocaleAdminCoursesCourseIdSharingRoute,
  LocaleAdminCoursesCourseIdStatisticsRoute:
    LocaleAdminCoursesCourseIdStatisticsRoute,
  LocaleAdminCoursesCourseIdWebhooksRoute:
    LocaleAdminCoursesCourseIdWebhooksRoute,
}

const LocaleAdminRouteWithChildren = LocaleAdminRoute._addFileChildren(
  LocaleAdminRouteChildren,
)

interface LocaleLearnerRouteChildren {
  LocaleLearnerIndexRoute: typeof LocaleLearnerIndexRoute
  LocaleLearnerCollectionsCollectionIdRoute: typeof LocaleLearnerCollectionsCollectionIdRoute
  LocaleLearnerCoursesCourseIdPlayRoute: typeof LocaleLearnerCoursesCourseIdPlayRoute
  LocaleLearnerCoursesCourseIdIndexRoute: typeof LocaleLearnerCoursesCourseIdIndexRoute
}

const LocaleLearnerRouteChildren: LocaleLearnerRouteChildren = {
  LocaleLearnerIndexRoute: LocaleLearnerIndexRoute,
  LocaleLearnerCollectionsCollectionIdRoute:
    LocaleLearnerCollectionsCollectionIdRoute,
  LocaleLearnerCoursesCourseIdPlayRoute: LocaleLearnerCoursesCourseIdPlayRoute,
  LocaleLearnerCoursesCourseIdIndexRoute:
    LocaleLearnerCoursesCourseIdIndexRoute,
}

const LocaleLearnerRouteWithChildren = LocaleLearnerRoute._addFileChildren(
  LocaleLearnerRouteChildren,
)

export interface FileRoutesByFullPath {
  '/$locale/admin': typeof LocaleAdminRouteWithChildren
  '/$locale/ai': typeof LocaleAiRoute
  '/$locale/create-team': typeof LocaleCreateTeamRoute
  '/$locale/learner': typeof LocaleLearnerRouteWithChildren
  '/$locale/not-admin': typeof LocaleNotAdminRoute
  '/$locale': typeof LocaleIndexRoute
  '/$locale/admin/certificate': typeof LocaleAdminCertificateRoute
  '/$locale/admin/keys': typeof LocaleAdminKeysRoute
  '/$locale/admin/members': typeof LocaleAdminMembersRoute
  '/$locale/admin/settings': typeof LocaleAdminSettingsRoute
  '/$locale/auth/login': typeof LocaleAuthLoginRoute
  '/$locale/auth/verify-email': typeof LocaleAuthVerifyEmailRoute
  '/$locale/admin/': typeof LocaleAdminIndexRoute
  '/$locale/learner/': typeof LocaleLearnerIndexRoute
  '/$locale/admin/collections/create': typeof LocaleAdminCollectionsCreateRoute
  '/$locale/admin/courses/create': typeof LocaleAdminCoursesCreateRoute
  '/$locale/learner/collections/$collectionId': typeof LocaleLearnerCollectionsCollectionIdRoute
  '/$locale/admin/collections/$collectionId/courses': typeof LocaleAdminCollectionsCollectionIdCoursesRoute
  '/$locale/admin/collections/$collectionId/learners': typeof LocaleAdminCollectionsCollectionIdLearnersRoute
  '/$locale/admin/collections/$collectionId/settings': typeof LocaleAdminCollectionsCollectionIdSettingsRoute
  '/$locale/admin/courses/$courseId/learners': typeof LocaleAdminCoursesCourseIdLearnersRoute
  '/$locale/admin/courses/$courseId/modules': typeof LocaleAdminCoursesCourseIdModulesRoute
  '/$locale/admin/courses/$courseId/settings': typeof LocaleAdminCoursesCourseIdSettingsRoute
  '/$locale/admin/courses/$courseId/sharing': typeof LocaleAdminCoursesCourseIdSharingRoute
  '/$locale/admin/courses/$courseId/statistics': typeof LocaleAdminCoursesCourseIdStatisticsRoute
  '/$locale/admin/courses/$courseId/webhooks': typeof LocaleAdminCoursesCourseIdWebhooksRoute
  '/$locale/learner/courses/$courseId/play': typeof LocaleLearnerCoursesCourseIdPlayRoute
  '/$locale/learner/courses/$courseId': typeof LocaleLearnerCoursesCourseIdIndexRoute
}

export interface FileRoutesByTo {
  '/$locale/ai': typeof LocaleAiRoute
  '/$locale/create-team': typeof LocaleCreateTeamRoute
  '/$locale/not-admin': typeof LocaleNotAdminRoute
  '/$locale': typeof LocaleIndexRoute
  '/$locale/admin/certificate': typeof LocaleAdminCertificateRoute
  '/$locale/admin/keys': typeof LocaleAdminKeysRoute
  '/$locale/admin/members': typeof LocaleAdminMembersRoute
  '/$locale/admin/settings': typeof LocaleAdminSettingsRoute
  '/$locale/auth/login': typeof LocaleAuthLoginRoute
  '/$locale/auth/verify-email': typeof LocaleAuthVerifyEmailRoute
  '/$locale/admin': typeof LocaleAdminIndexRoute
  '/$locale/learner': typeof LocaleLearnerIndexRoute
  '/$locale/admin/collections/create': typeof LocaleAdminCollectionsCreateRoute
  '/$locale/admin/courses/create': typeof LocaleAdminCoursesCreateRoute
  '/$locale/learner/collections/$collectionId': typeof LocaleLearnerCollectionsCollectionIdRoute
  '/$locale/admin/collections/$collectionId/courses': typeof LocaleAdminCollectionsCollectionIdCoursesRoute
  '/$locale/admin/collections/$collectionId/learners': typeof LocaleAdminCollectionsCollectionIdLearnersRoute
  '/$locale/admin/collections/$collectionId/settings': typeof LocaleAdminCollectionsCollectionIdSettingsRoute
  '/$locale/admin/courses/$courseId/learners': typeof LocaleAdminCoursesCourseIdLearnersRoute
  '/$locale/admin/courses/$courseId/modules': typeof LocaleAdminCoursesCourseIdModulesRoute
  '/$locale/admin/courses/$courseId/settings': typeof LocaleAdminCoursesCourseIdSettingsRoute
  '/$locale/admin/courses/$courseId/sharing': typeof LocaleAdminCoursesCourseIdSharingRoute
  '/$locale/admin/courses/$courseId/statistics': typeof LocaleAdminCoursesCourseIdStatisticsRoute
  '/$locale/admin/courses/$courseId/webhooks': typeof LocaleAdminCoursesCourseIdWebhooksRoute
  '/$locale/learner/courses/$courseId/play': typeof LocaleLearnerCoursesCourseIdPlayRoute
  '/$locale/learner/courses/$courseId': typeof LocaleLearnerCoursesCourseIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$locale/admin': typeof LocaleAdminRouteWithChildren
  '/$locale/ai': typeof LocaleAiRoute
  '/$locale/create-team': typeof LocaleCreateTeamRoute
  '/$locale/learner': typeof LocaleLearnerRouteWithChildren
  '/$locale/not-admin': typeof LocaleNotAdminRoute
  '/$locale/': typeof LocaleIndexRoute
  '/$locale/admin/certificate': typeof LocaleAdminCertificateRoute
  '/$locale/admin/keys': typeof LocaleAdminKeysRoute
  '/$locale/admin/members': typeof LocaleAdminMembersRoute
  '/$locale/admin/settings': typeof LocaleAdminSettingsRoute
  '/$locale/auth/login': typeof LocaleAuthLoginRoute
  '/$locale/auth/verify-email': typeof LocaleAuthVerifyEmailRoute
  '/$locale/admin/': typeof LocaleAdminIndexRoute
  '/$locale/learner/': typeof LocaleLearnerIndexRoute
  '/$locale/admin/collections/create': typeof LocaleAdminCollectionsCreateRoute
  '/$locale/admin/courses/create': typeof LocaleAdminCoursesCreateRoute
  '/$locale/learner/collections/$collectionId': typeof LocaleLearnerCollectionsCollectionIdRoute
  '/$locale/admin/collections/$collectionId/courses': typeof LocaleAdminCollectionsCollectionIdCoursesRoute
  '/$locale/admin/collections/$collectionId/learners': typeof LocaleAdminCollectionsCollectionIdLearnersRoute
  '/$locale/admin/collections/$collectionId/settings': typeof LocaleAdminCollectionsCollectionIdSettingsRoute
  '/$locale/admin/courses/$courseId/learners': typeof LocaleAdminCoursesCourseIdLearnersRoute
  '/$locale/admin/courses/$courseId/modules': typeof LocaleAdminCoursesCourseIdModulesRoute
  '/$locale/admin/courses/$courseId/settings': typeof LocaleAdminCoursesCourseIdSettingsRoute
  '/$locale/admin/courses/$courseId/sharing': typeof LocaleAdminCoursesCourseIdSharingRoute
  '/$locale/admin/courses/$courseId/statistics': typeof LocaleAdminCoursesCourseIdStatisticsRoute
  '/$locale/admin/courses/$courseId/webhooks': typeof LocaleAdminCoursesCourseIdWebhooksRoute
  '/$locale/learner/courses/$courseId/play': typeof LocaleLearnerCoursesCourseIdPlayRoute
  '/$locale/learner/courses/$courseId/': typeof LocaleLearnerCoursesCourseIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$locale/admin'
    | '/$locale/ai'
    | '/$locale/create-team'
    | '/$locale/learner'
    | '/$locale/not-admin'
    | '/$locale'
    | '/$locale/admin/certificate'
    | '/$locale/admin/keys'
    | '/$locale/admin/members'
    | '/$locale/admin/settings'
    | '/$locale/auth/login'
    | '/$locale/auth/verify-email'
    | '/$locale/admin/'
    | '/$locale/learner/'
    | '/$locale/admin/collections/create'
    | '/$locale/admin/courses/create'
    | '/$locale/learner/collections/$collectionId'
    | '/$locale/admin/collections/$collectionId/courses'
    | '/$locale/admin/collections/$collectionId/learners'
    | '/$locale/admin/collections/$collectionId/settings'
    | '/$locale/admin/courses/$courseId/learners'
    | '/$locale/admin/courses/$courseId/modules'
    | '/$locale/admin/courses/$courseId/settings'
    | '/$locale/admin/courses/$courseId/sharing'
    | '/$locale/admin/courses/$courseId/statistics'
    | '/$locale/admin/courses/$courseId/webhooks'
    | '/$locale/learner/courses/$courseId/play'
    | '/$locale/learner/courses/$courseId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$locale/ai'
    | '/$locale/create-team'
    | '/$locale/not-admin'
    | '/$locale'
    | '/$locale/admin/certificate'
    | '/$locale/admin/keys'
    | '/$locale/admin/members'
    | '/$locale/admin/settings'
    | '/$locale/auth/login'
    | '/$locale/auth/verify-email'
    | '/$locale/admin'
    | '/$locale/learner'
    | '/$locale/admin/collections/create'
    | '/$locale/admin/courses/create'
    | '/$locale/learner/collections/$collectionId'
    | '/$locale/admin/collections/$collectionId/courses'
    | '/$locale/admin/collections/$collectionId/learners'
    | '/$locale/admin/collections/$collectionId/settings'
    | '/$locale/admin/courses/$courseId/learners'
    | '/$locale/admin/courses/$courseId/modules'
    | '/$locale/admin/courses/$courseId/settings'
    | '/$locale/admin/courses/$courseId/sharing'
    | '/$locale/admin/courses/$courseId/statistics'
    | '/$locale/admin/courses/$courseId/webhooks'
    | '/$locale/learner/courses/$courseId/play'
    | '/$locale/learner/courses/$courseId'
  id:
    | '__root__'
    | '/$locale/admin'
    | '/$locale/ai'
    | '/$locale/create-team'
    | '/$locale/learner'
    | '/$locale/not-admin'
    | '/$locale/'
    | '/$locale/admin/certificate'
    | '/$locale/admin/keys'
    | '/$locale/admin/members'
    | '/$locale/admin/settings'
    | '/$locale/auth/login'
    | '/$locale/auth/verify-email'
    | '/$locale/admin/'
    | '/$locale/learner/'
    | '/$locale/admin/collections/create'
    | '/$locale/admin/courses/create'
    | '/$locale/learner/collections/$collectionId'
    | '/$locale/admin/collections/$collectionId/courses'
    | '/$locale/admin/collections/$collectionId/learners'
    | '/$locale/admin/collections/$collectionId/settings'
    | '/$locale/admin/courses/$courseId/learners'
    | '/$locale/admin/courses/$courseId/modules'
    | '/$locale/admin/courses/$courseId/settings'
    | '/$locale/admin/courses/$courseId/sharing'
    | '/$locale/admin/courses/$courseId/statistics'
    | '/$locale/admin/courses/$courseId/webhooks'
    | '/$locale/learner/courses/$courseId/play'
    | '/$locale/learner/courses/$courseId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LocaleAdminRoute: typeof LocaleAdminRouteWithChildren
  LocaleAiRoute: typeof LocaleAiRoute
  LocaleCreateTeamRoute: typeof LocaleCreateTeamRoute
  LocaleLearnerRoute: typeof LocaleLearnerRouteWithChildren
  LocaleNotAdminRoute: typeof LocaleNotAdminRoute
  LocaleIndexRoute: typeof LocaleIndexRoute
  LocaleAuthLoginRoute: typeof LocaleAuthLoginRoute
  LocaleAuthVerifyEmailRoute: typeof LocaleAuthVerifyEmailRoute
}

const rootRouteChildren: RootRouteChildren = {
  LocaleAdminRoute: LocaleAdminRouteWithChildren,
  LocaleAiRoute: LocaleAiRoute,
  LocaleCreateTeamRoute: LocaleCreateTeamRoute,
  LocaleLearnerRoute: LocaleLearnerRouteWithChildren,
  LocaleNotAdminRoute: LocaleNotAdminRoute,
  LocaleIndexRoute: LocaleIndexRoute,
  LocaleAuthLoginRoute: LocaleAuthLoginRoute,
  LocaleAuthVerifyEmailRoute: LocaleAuthVerifyEmailRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$locale/admin",
        "/$locale/ai",
        "/$locale/create-team",
        "/$locale/learner",
        "/$locale/not-admin",
        "/$locale/",
        "/$locale/auth/login",
        "/$locale/auth/verify-email"
      ]
    },
    "/$locale/admin": {
      "filePath": "$locale/admin.tsx",
      "children": [
        "/$locale/admin/certificate",
        "/$locale/admin/keys",
        "/$locale/admin/members",
        "/$locale/admin/settings",
        "/$locale/admin/",
        "/$locale/admin/collections/create",
        "/$locale/admin/courses/create",
        "/$locale/admin/collections/$collectionId/courses",
        "/$locale/admin/collections/$collectionId/learners",
        "/$locale/admin/collections/$collectionId/settings",
        "/$locale/admin/courses/$courseId/learners",
        "/$locale/admin/courses/$courseId/modules",
        "/$locale/admin/courses/$courseId/settings",
        "/$locale/admin/courses/$courseId/sharing",
        "/$locale/admin/courses/$courseId/statistics",
        "/$locale/admin/courses/$courseId/webhooks"
      ]
    },
    "/$locale/ai": {
      "filePath": "$locale/ai.tsx"
    },
    "/$locale/create-team": {
      "filePath": "$locale/create-team.tsx"
    },
    "/$locale/learner": {
      "filePath": "$locale/learner.tsx",
      "children": [
        "/$locale/learner/",
        "/$locale/learner/collections/$collectionId",
        "/$locale/learner/courses/$courseId/play",
        "/$locale/learner/courses/$courseId/"
      ]
    },
    "/$locale/not-admin": {
      "filePath": "$locale/not-admin.tsx"
    },
    "/$locale/": {
      "filePath": "$locale/index.tsx"
    },
    "/$locale/admin/certificate": {
      "filePath": "$locale/admin/certificate.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/keys": {
      "filePath": "$locale/admin/keys.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/members": {
      "filePath": "$locale/admin/members.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/settings": {
      "filePath": "$locale/admin/settings.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/auth/login": {
      "filePath": "$locale/auth/login.tsx"
    },
    "/$locale/auth/verify-email": {
      "filePath": "$locale/auth/verify-email.tsx"
    },
    "/$locale/admin/": {
      "filePath": "$locale/admin/index.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/learner/": {
      "filePath": "$locale/learner/index.tsx",
      "parent": "/$locale/learner"
    },
    "/$locale/admin/collections/create": {
      "filePath": "$locale/admin/collections.create.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/courses/create": {
      "filePath": "$locale/admin/courses.create.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/learner/collections/$collectionId": {
      "filePath": "$locale/learner/collections.$collectionId.tsx",
      "parent": "/$locale/learner"
    },
    "/$locale/admin/collections/$collectionId/courses": {
      "filePath": "$locale/admin/collections.$collectionId.courses.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/collections/$collectionId/learners": {
      "filePath": "$locale/admin/collections.$collectionId.learners.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/collections/$collectionId/settings": {
      "filePath": "$locale/admin/collections.$collectionId.settings.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/courses/$courseId/learners": {
      "filePath": "$locale/admin/courses.$courseId.learners.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/courses/$courseId/modules": {
      "filePath": "$locale/admin/courses.$courseId.modules.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/courses/$courseId/settings": {
      "filePath": "$locale/admin/courses.$courseId.settings.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/courses/$courseId/sharing": {
      "filePath": "$locale/admin/courses.$courseId.sharing.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/courses/$courseId/statistics": {
      "filePath": "$locale/admin/courses.$courseId.statistics.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/admin/courses/$courseId/webhooks": {
      "filePath": "$locale/admin/courses.$courseId.webhooks.tsx",
      "parent": "/$locale/admin"
    },
    "/$locale/learner/courses/$courseId/play": {
      "filePath": "$locale/learner/courses.$courseId.play.tsx",
      "parent": "/$locale/learner"
    },
    "/$locale/learner/courses/$courseId/": {
      "filePath": "$locale/learner/courses.$courseId.index.tsx",
      "parent": "/$locale/learner"
    }
  }
}
ROUTE_MANIFEST_END */
